{"version":3,"sources":["services/authAPI.js","pages/Login.js","components/images/logo.png","components/components/Sidebar.js","components/components/Header.js","services/studyAPI.js","components/components/MobileHeader.js","services/projectAPI.js","services/userAPI.js","components/components/ManagerSidebar.js","components/components/HeaderManager.js","components/components/ManagerHeaderMobile.js","pages/ManagerDash.js","pages/Project.js","pages/Userdash.js","pages/Label.js","services/uploadAPI.js","pages/EditDatagrid.js","pages/GridTable.js","pages/DataGrid.js","services/taskAPI.js","pages/DisplayComment.js","pages/AddComment.js","pages/ManagerDisplayTask.js","pages/AddTask.js","pages/DisplayTasks.js","pages/Introduction.js","pages/Methodology.js","pages/ResultsAndDiscussion.js","pages/Conclusion.js","pages/Summary.js","pages/Documentation.js","pages/StudyDash_mobile.js","pages/StudyDash.js","routes/privateRoute.js","routes/publicRoute.js","pages/ChangePassword.js","pages/Account.js","pages/Signup.js","pages/Forgotpassword.js","pages/NewPassword.js","pages/ManagerStudyDash.js","pages/Study.js","pages/PageNotFound.js","App.js","reportWebVitals.js","reducers/authReducer.js","reducers/userReducer.js","reducers/errorReducer.js","reducers/studyReducer.js","reducers/projectReducer.js","reducers/index.js","index.js"],"names":["onUserLogin","body","dispatch","a","axios","post","headers","type","message","response","data","status","error","verifyAuth","accessToken","localStorage","getItem","refreshToken","get","onUserLogout","onRenewToken","Login","history","useHistory","useDispatch","Title","Typography","useState","email","password","user","setUser","loading","setLoading","notif","notification","description","onSubmit","getUser","result","setItem","token","avatarFilename","value","push","forgotPassword","window","innerHeight","innerWidth","size","setSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","height","width","className","style","background","minHeight","minWidth","justify","marginTop","alignItems","justifyContent","name","initialValues","remember","onFinish","fontFamily","fontWeight","fontSize","Item","rules","required","placeholder","prefix","MailOutlined","onChange","e","target","Password","iconRender","visible","EyeTwoTone","EyeInvisibleOutlined","color","float","onClick","block","borderRadius","htmlType","level","Sidebar","research","account","alt","src","logo","icon","BookOutlined","UserOutlined","Header","handleLogout","removeItem","console","alert","onBack","back","title","extra","onStudyCreate","onGetStudyForUser","onUpdateSummary","onUpdateIntroduction","onUpdateMethodology","onUpdateResultsAndDiscussion","onUpdateConclusion","onGetDocumentation","onGetStudyForDoc","onAddDatagrid","onGetDatagrid","onEditDatagrid","onDeleteDatagrid","onUpdateDatagrid","onGetAllStudyforProject","onDownloadHistory","onGetDownloadHistory","onDeleteStudy","MobileHeader","SubMenu","Menu","studies","triggerSubMenuAction","MenuOutlined","display","onProjectCreate","onGetAllProject","onGetProjectforManager","onDeleteProject","onUserCreate","onChangePassword","onForgotPassword","onVerifyResetPasswordToken","onResetPassword","onGetAllUsers","onGetAllManagers","ManagerSidebar","project","HeaderManager","ManagerHeaderMobile","ManagerDash","props","userObj","useSelector","state","projectData","setProjectData","USER","projectResult","tempProjectData","i","length","key","projectID","projectLeader","assignee","projectName","dateCreated","moment","format","dateUpdated","progress","getProjects","undefined","handleRemove","newData","filter","tempData","columns","dataIndex","defaultSortOrder","sorter","b","studyno","render","map","lead","ellipsis","percent","text","record","index","flexDirection","gap","onConfirm","id","_id","danger","scroll","x","y","dataSource","margin","Layout","Content","Sider","Project","Option","Select","userData","setUserData","setProject","isModalVisible","setIsModalVisible","forProps","setForProps","newProject","resultUsers","tempUserData","getUsers","padding","placement","onOk","onCancel","mode","tokenSeparators","Userdash","studyData","setStudyData","tempStudyData","studyTitle","studyID","getStudies","filters","onFilter","indexOf","toUpperCase","category","Label","studyObj","study","STUDY","textAlign","position","updatedBy","deadline","maxWidth","onUploadAvatar","file","onUploadDataGrid","EditDataGrid","setTitle","setDescription","setData","setDisplay","columnsData","setColumnsData","addColumnTitle","setAddColumnTitle","disabledColumn","setDisabledColumn","toRemoveColumn","setToRemoveColumn","tempCol","setTempCol","imageFilename","setImageFilename","AUTOSAVE_INTERVAL","useMemo","disabled","setDisabled","antIcon","LoadingOutlined","spin","checkColumnType","keyColumn","checkboxColumn","textColumn","cameraColumn","component","React","memo","rowData","setRowData","CameraFilled","accept","files","FormData","append","filename","showImage","EyeFilled","deleteValue","copyValue","pasteValue","createRow","useCallback","timer","setTimeout","dataToSend","updateDB","clearTimeout","getEditData","resultDB","tempCols","j","tempColumns","getColumns","csv","keys","Object","forEach","datarow","element","document","createElement","Blob","href","URL","createObjectURL","download","appendChild","click","FontSizeOutlined","CheckSquareFilled","column","newColumn","includes","removeColumn","DeleteFilled","DownloadOutlined","indicator","opacity","pointerEvents","rowGap","GridTable","tableData","setTableData","editData","setEditData","setHistory","loadingModal","setLoadingModal","finaldata","ID","tempTableData","tableID","getDatagridData","showModal","tempHistory","downloadedBy","downloadDate","downloadCSV","toDownload","resultDownload","EditFilled","InfoCircleFilled","EditDatagrid","marginLeft","pagination","DataGrid","addTableStyle","setAddTableStyle","disabledCreate","setDisabledCreate","addTable","setAddTable","PlusSquareFilled","onTaskCreate","onGetUserForTask","onGetAllTask","onGetAllTaskManager","onAddComment","onGetALlComment","onUpdateTask","onUpdateTaskUser","onDeleteTask","DisplayComment","comments","setComments","setLength","getAllComments","taskId","task","tempCommentData","commentLoop","author","avatar","content","comment","date","slice","datetime","AddComment","TextArea","Input","submitting","fromNow","setComment","setTask","taskID","rows","Panel","Collapse","ManagerDisplayTask","projectObj","setloading","studyName","resultTask","loopTask","tasks","tempTaskData","createdBy","lastUpdated","taskTitle","tasksTitle","taskDescription","tasksDescription","getAllTask","newTask","complete","progressDB","Math","floor","PROJECT","accordion","header","markComplete","deleteTask","lineHeight","AddTask","onGetUser","direction","DisplayTasks","forBackend","Introduction","EditorState","createEmpty","editorState","setEditorState","getCurrentContent","dataToSaveBackend","JSON","stringify","convertToRaw","markup","draftToHtml","source","encodeURIComponent","fileDownload","removeChild","introduction","contentState","convertFromRaw","parse","docs","createWithContent","getDataFromDB","toolbarClassName","wrapperClassName","editorClassName","toolbar","inline","inDropdown","list","link","image","uploadCallback","Promise","resolve","reject","xhr","XMLHttpRequest","open","send","responseText","present","mandatory","previewImage","onEditorStateChange","Methodology","methodology","ResultsAndDiscussion","resultsAndDiscussion","Conclusion","conclusion","Summary","editor","useRef","setStudy","assignees","setAssignees","update","setUpdate","updateTitleandBudget","setUpdateTitleandBudget","summary","budget","xAssignee","tempAssignee","getStudyData","bordered","left","current","focus","readOnly","ref","assign","TabPane","Tabs","Documentation","tab","StudyDash_Mobile","StudyDash","gutter","span","overflowY","PrivateRoute","Component","rest","isAuthenticated","to","pathname","PublicRoute","ChangePassword","oldPassword","newPassword","confrimPassword","setPassword","newPass","oldPass","justifyItems","Account","imgData","setImgData","margintTop","marginRight","marginBottom","for","reader","FileReader","readAsDataURL","Signup","resultProject","res","defaultValue","checked","Forgotpassword","setEmail","handleOk","login","NewPassword","confirmPassword","setNewPassword","queryParams","QueryString","location","search","confirmPass","verifyToken","ManagerStudyDash","Study","newStudy","min","max","formatter","replace","parser","PageNotFound","subTitle","App","authObj","auth","errorObj","AUTHENTICATED","verify","renew","path","exact","LoginPage","ForgotPassword","ResetPassword","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","LOADING","action","userReducer","errorReducer","rootReducer","combineReducers","studyReducer","projectReducer","store","createStore","composeWithDevTools","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b8e282dc.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n\r\nexport async function onUserLogin(body, dispatch) {\r\n    try {\r\n    \r\n\r\n        return axios.post(\"/v1/auth/login\", body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    \r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            message: error.response.data.message,\r\n            status: error.response.status \r\n        })\r\n        return {\r\n            status: 'false',\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\n//for authentication\r\nexport async function verifyAuth(dispatch) {\r\n    try {\r\n        const accessToken = localStorage.getItem(\"accessToken\")\r\n        const refreshToken = localStorage.getItem(\"refreshToken\")\r\n\r\n        if (!accessToken || !refreshToken) {\r\n            return {\r\n                status: 'false',\r\n                error: 'Access Token / Refresh Token is missing'\r\n            }\r\n        }\r\n        return axios.get(\"/v1/auth/verify\", {\r\n            headers: {\r\n                         'Authorization' : `Bearer ${accessToken}`,\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        })\r\n       \r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            message: error.response.data.message,\r\n            status: error.response.status \r\n        })\r\n        dispatch({\r\n            type: \"AUTH_ERROR\",\r\n        })\r\n        return {\r\n            status: error,\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport async function onUserLogout(body, dispatch) {\r\n    try {\r\n        return axios.post(\"/v1/auth/logout\", body);\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            message: error.response.data.message,\r\n            status: error.response.status \r\n        })\r\n        return {\r\n            status: 'false',\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\nexport async function onRenewToken(body, dispatch) {\r\n    try {\r\n        return axios.post(\"/v1/auth/renewToken\", body);\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            message: error.response.data.message,\r\n            status: error.response.status \r\n        })\r\n    }\r\n}\r\n\r\n","\r\nimport { Input, Button, Form, Row, Col, Typography, Spin, notification} from 'antd';\r\nimport { EyeInvisibleOutlined, EyeTwoTone, MailOutlined} from '@ant-design/icons';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {onUserLogin } from '@services/authAPI';\r\nimport { useDispatch } from 'react-redux';\r\nimport '../styles/CSS/Userdash.css'\r\n\r\n\r\n\r\nfunction Login() {\r\n  const  history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { Title } = Typography;\r\n\r\n  const [user, setUser] = useState({email:\"\", password:\"\"}); //for login state\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const notif = (type, message) => {\r\n    notification[type]({\r\n      message: 'Notification',\r\n      description:\r\n        message,\r\n    });\r\n  };\r\n\r\n  async function onSubmit(){\r\n    const getUser = {\r\n      email: user.email,\r\n      password: user.password\r\n    }\r\n    try {\r\n      setLoading(true)\r\n      let result = await onUserLogin(getUser)\r\n      localStorage.setItem(\"accessToken\", result.data.accessToken);\r\n      localStorage.setItem(\"refreshToken\", result.data.token.refreshToken);\r\n      localStorage.setItem(\"avatarFilename\", result.data.data.avatarFilename);\r\n      \r\n      dispatch({\r\n        type: \"SET_USER\",\r\n        value: result.data.data\r\n     })\r\n      \r\n      dispatch({\r\n        type: \"VERIFIED_AUTHENTICATION\",\r\n        value: true\r\n     })\r\n\r\n     dispatch({\r\n      type: \"LOGIN_SUCCESS\"\r\n   })\r\n     history.push('/dash')\r\n    \r\n    } catch (error) {\r\n      setLoading(false)\r\n      notif(\"error\", error.response.data.message)\r\n      dispatch({\r\n        type: \"GET_ERRORS\",\r\n        message: error.response.data.message,\r\n        status: error.response.status\r\n      })\r\n      dispatch({\r\n        type: \"LOGIN_FAIL\",\r\n      })\r\n    }\r\n  }\r\n \r\n  const forgotPassword = () => {\r\n    history.push('/forgotpassword')\r\n  }\r\n \r\n  function useWindowSize(){\r\n    const [size, setSize] = useState([window.innerHeight, window.innerWidth]);\r\n    useEffect(() => {\r\n      const handleResize = () => {\r\n        setSize([window.innerHeight, window.innerWidth])\r\n      }\r\n      window.addEventListener(\"resize\", handleResize)\r\n      return() => {\r\n        window.removeEventListener(\"resize\", handleResize)\r\n      }\r\n    }, [])\r\n    return size;\r\n  }\r\n  \r\n  const [height, width] = useWindowSize();\r\n  if(height <= 760 && width <= 768){\r\n    return(\r\n      <div> {loading? <Spin className=\"spinner\" />  :\r\n      <div style={{background: '#f2f2f2', minHeight: \"200vh\", minWidth:'100vh'}}>\r\n        <Row justify=\"center\">\r\n      <Col  >\r\n        <Form style={{marginTop: \"40%\", width: '400px', alignItems:'center', justifyContent:'center' , minHeight: \"100vh\"}} name=\"basic\"initialValues={{remember: true}} onFinish={onSubmit}>\r\n        <Title style={{fontFamily: \"Bangla MN\", fontWeight: \"bolder\", fontSize: '16.5px'}}>VIRTUAL REASEARCH MANAGEMENT SYSTEM</Title>\r\n          <Form.Item name=\"email\"  \r\n              rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your email!',\r\n              },\r\n              ]}\r\n          >\r\n            <Input  placeholder=\"Enter Email\" prefix={<MailOutlined />} onChange={e => setUser({...user, email: e.target.value})} value={user.email}/>\r\n          </Form.Item>\r\n  \r\n          <Form.Item name=\"password\" \r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n            ]}\r\n            >\r\n              <Input.Password placeholder=\"Enter password\" iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)} onChange={e => setUser({...user, password: e.target.value})} value={user.password}/>\r\n          </Form.Item>\r\n          <Form.Item><Button type= \"link\" style={{fontFamily: \"Montserrat\",color: \"#000000\", float: 'right'}} onClick={forgotPassword}> Forgot your password?</Button></Form.Item>\r\n          <Form.Item><Button block style={{background: \"#A0BF85\", borderRadius: \"5px\"}} htmlType=\"submit\" >LOGIN</Button></Form.Item>\r\n          \r\n      </Form>\r\n      </Col>\r\n      </Row>\r\n      </div>}\r\n      </div>\r\n    )}\r\n\r\n  return (\r\n    <div>\r\n      {loading? <Spin className=\"spinner\" />  :\r\n    <div style={{background: '#f2f2f2', minHeight: \"100vh\"}}>\r\n     <Row justify=\"center\">\r\n    <Col  >\r\n      <Form style={{marginTop: \"40%\"}} name=\"basic\" initialValues={{remember: true,}} onFinish={onSubmit}>\r\n      <Title level={4} style={{fontFamily: \"Bangla MN\", fontWeight: \"bolder\"}}>VIRTUAL REASEARCH MANAGEMENT SYSTEM</Title>\r\n        <Form.Item name=\"email\"  \r\n            rules={[\r\n            {\r\n              type: 'email',\r\n              required: true,\r\n            },\r\n            ]}\r\n        >\r\n          <Input  placeholder=\"Enter Email\" prefix={<MailOutlined />} onChange={e => setUser({...user, email: e.target.value})} value={user.email}/>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"password\" \r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your password!',\r\n            },\r\n          ]}\r\n          >\r\n            <Input.Password placeholder=\"Enter password\" iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)} onChange={e => setUser({...user, password: e.target.value})} value={user.password}/>\r\n        </Form.Item>\r\n        <Form.Item><Button type= \"link\" style={{fontFamily: \"Montserrat\",color: \"#000000\", float: 'right'}} onClick={forgotPassword}> Forgot your password?</Button></Form.Item>\r\n        <Form.Item><Button block style={{background: \"#A0BF85\", borderRadius: \"5px\"}} htmlType=\"submit\" >LOGIN</Button></Form.Item>\r\n        \r\n    </Form>\r\n    </Col>\r\n    </Row>\r\n    </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Login;","export default __webpack_public_path__ + \"static/media/logo.5372d2f7.png\";","import React from 'react'\r\nimport { Menu} from 'antd'\r\nimport logo from '../images/logo.png'\r\nimport { BookOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst Sidebar = () => {\r\n    let history= useHistory();\r\n\r\n    const research = async () => {\r\n          history.push(\"/dash\")\r\n      }\r\n\r\n    const account = async () => {\r\n          history.push(\"/account\")\r\n      }\r\n    return (\r\n        <div>\r\n             <img alt=\"\" src={logo} className=\"logo\" />\r\n          <Menu>\r\n          <Menu.Item key=\"1\" icon={<BookOutlined />} className=\"menu1\" onClick={research}>\r\n           Research\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\" icon={<UserOutlined />} className=\"menu1\" onClick={account}>\r\n            Account\r\n          </Menu.Item>\r\n          </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport { Button, PageHeader } from 'antd'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { onUserLogout } from '../../services/authAPI';\r\n\r\n\r\nconst Header = () => {\r\n    let history= useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = async () => { \r\n        try {\r\n          const tokens = {\r\n            refreshToken: localStorage.getItem(\"refreshToken\"),\r\n            accessToken: localStorage.getItem(\"accessToken\")\r\n          }\r\n          \r\n          onUserLogout(tokens)\r\n          localStorage.removeItem(\"accessToken\");\r\n          localStorage.removeItem(\"refreshToken\");\r\n          dispatch({\r\n            type: \"VERIFIED_AUTHENTICATION\",\r\n            value: false\r\n         })\r\n          history.push('/')\r\n        } catch (error) {\r\n          console.error(error)\r\n          alert(error.response.data.error);\r\n        }\r\n      };\r\n\r\n    return (\r\n        <div>\r\n             <PageHeader onBack={()=> window.history.back() } title=\"Studies\" extra={<Button type='link' onClick={handleLogout}  style={{float: 'right', color:'black', fontFamily: 'Montserrat'}}>Logout</Button>}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import axios from 'axios'\r\n\r\n\r\nexport async function onStudyCreate(body) {\r\n    try {\r\n        return axios.post(\"/v1/studies/createstudy\", body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\nexport async function onGetStudyForUser(body) {\r\n    try {\r\n        return axios.post(`/v1/studies/getStudyForUser`, body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\nexport async function onUpdateSummary(body) {\r\n    try {\r\n        return axios.post(`/v1/studies/updateSummary`, body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\nexport async function onUpdateIntroduction(body) {\r\n    try {\r\n        return axios.post(`/v1/studies/updateIntroduction`, body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\nexport async function onUpdateMethodology(body) {\r\n    try {\r\n        return axios.post(`/v1/studies/updateMethodology`, body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\nexport async function onUpdateResultsAndDiscussion(body) {\r\n    try {\r\n        return axios.post(`/v1/studies/updateResultsAndDiscussion`, body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\nexport async function onUpdateConclusion(body) {\r\n    try {\r\n        return axios.post(`/v1/studies/updateConclusion`, body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\nexport async function onGetDocumentation(body) {\r\n    try {\r\n        return axios.post(`/v1/studies/getDocumentation`, body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport async function onGetStudyForDoc(body) {\r\n    try {\r\n        return axios.post(`/v1/studies/getStudyforDoc`, body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport async function onAddDatagrid(body) {\r\n    try {\r\n        return axios.post(`/v1/studies/addDatagrid`, body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport async function onGetDatagrid(body) {\r\n    try {\r\n        return axios.post('/v1/studies/getDataGrid', body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\nexport async function onEditDatagrid(body) {\r\n    try {\r\n        return axios.post('/v1/studies/editDataGrid', body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\nexport async function onDeleteDatagrid(body) {\r\n    try {\r\n        return axios.post('/v1/studies/deleteDataGrid', body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\nexport async function onUpdateDatagrid(body) {\r\n    try {\r\n        return axios.post('/v1/studies/updateDataGrid', body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\nexport async function onGetAllStudyforProject(body) {\r\n    try {\r\n        return axios.post('/v1/studies/studyForProject', body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\nexport async function onDownloadHistory(body) {\r\n    try {\r\n        return axios.post('/v1/studies/downloadHistory', body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\nexport async function onGetDownloadHistory(body) {\r\n    try {\r\n        return axios.post('/v1/studies/getdownloadHistory', body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\nexport async function onDeleteStudy(body) {\r\n    try {\r\n        return axios.post('/v1/studies/deleteStudy', body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport {  Menu, notification } from 'antd'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { onUserLogout } from '../../services/authAPI';\r\nimport { UserOutlined, BookOutlined, MenuOutlined } from '@ant-design/icons';\r\nimport logo from '../images/logo.png'\r\nimport '../../styles/CSS/Userdash.css'\r\n\r\n\r\nconst MobileHeader = () => {\r\n    let history= useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const {SubMenu}= Menu\r\n\r\n    const notif = (type, message) => {\r\n      notification[type]({\r\n        message: 'Notification',\r\n        description:\r\n          message,\r\n      });\r\n    };\r\n\r\n    const handleLogout = async () => { \r\n        try {\r\n          const tokens = {\r\n            refreshToken: localStorage.getItem(\"refreshToken\"),\r\n            accessToken: localStorage.getItem(\"accessToken\")\r\n          }\r\n          \r\n          onUserLogout(tokens)\r\n          localStorage.removeItem(\"accessToken\");\r\n          localStorage.removeItem(\"refreshToken\");\r\n          dispatch({\r\n            type: \"VERIFIED_AUTHENTICATION\",\r\n            value: false\r\n         })\r\n          history.push('/')\r\n        } catch (error) {\r\n          notif('error',error.response.data.error);\r\n        }\r\n      };\r\n\r\n      const studies = async() => {\r\n        history.push('/dash')\r\n      }\r\n\r\n    const account = async () => {\r\n        history.push(\"/account\")\r\n      }\r\n\r\n    return (\r\n        <div  style={{background:'white',height: '50px', minWidth: '100vh'}}>\r\n            <div style={{float:'left'}}>\r\n            <Menu triggerSubMenuAction=\"click\">\r\n                    <SubMenu key=\"sub1\" icon={<MenuOutlined/>}>\r\n                        <Menu.Item key=\"1\" icon={<UserOutlined/>} onClick={account}>\r\n                            Account\r\n                        </Menu.Item>\r\n                        <Menu.Item icon={<BookOutlined/>} key=\"2\" onClick={studies}>\r\n                            Research\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"3\" onClick={handleLogout}>\r\n                            Logout\r\n                        </Menu.Item>\r\n                    </SubMenu>\r\n                </Menu>\r\n                </div>\r\n        <div style={{display: 'flex', alignItems:'center', justifyContent:'center'}}>\r\n            \r\n            <div style={{display: 'flex', marginTop:'5px', alignItems:'center'}}>\r\n            <img alt=\"\" src={logo} style={{width: '40px', height: '40px'}}/>\r\n            <h3>Virtual Research Management System</h3>\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobileHeader\r\n","import axios from 'axios'\r\n\r\n\r\nexport async function onProjectCreate(body) {\r\n    try {\r\n        return axios.post(\"/v1/project/createproject\", body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            status: 'false',\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport async function onGetAllProject() {\r\n    try {\r\n        return axios.get(`/v1/project/getAllProject`, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            status: 'false',\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\nexport async function onGetProjectforManager(body) {\r\n    try {\r\n        return axios.post(`/v1/project/getProjectforManager`, body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            status: 'false',\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport async function onDeleteProject(body) {\r\n    try {\r\n        return axios.post(`/v1/project/deleteProject`, body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            status: 'false',\r\n            error: error\r\n        }\r\n    }\r\n}","import axios from 'axios'\r\n\r\nexport async function onUserCreate(body, dispatch) {\r\n    try {\r\n        return axios.post(\"/v1/user/secretcreateuser\", body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            message: error.response.data.message,\r\n            status: error.response.status \r\n        })\r\n        return {\r\n            status: 'false',\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\nexport async function onChangePassword(body, dispatch) {\r\n    try {\r\n        return axios.post(\"/v1/user/updatepassword\", body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            message: error && error.response && error.response.data &&  error.response.data.message ? error.response.data.message : \"Server is having an issue right now, Please try again later.\",\r\n            status: error.response.status \r\n        })   \r\n    }\r\n}\r\n\r\nexport async function onForgotPassword(body, dispatch) {\r\n    \r\n    try {\r\n        return axios.post(\"/v1/user/forgotpassword\", body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            message: error && error.response && error.response.data &&  error.response.data.message ? error.response.data.message : \"Server is having an issue right now, Please try again later.\",\r\n            status: error.response.status \r\n        })\r\n        return {\r\n            status: 'false',\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\nexport async function onVerifyResetPasswordToken(token) {\r\n    try {\r\n        return axios.get(`/v1/user/reset-password/${token}`, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            status: 'false',\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\nexport async function onResetPassword(token, body) {\r\n    try {\r\n        return axios.post(`/v1/user/reset-password/${token}`,body , {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            status: 'false',\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport async function onGetAllUsers() {\r\n    try {\r\n        return axios.get(`/v1/user/getAllUser`, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            status: 'false',\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\nexport async function onGetAllManagers() {\r\n    try {\r\n        return axios.get(`/v1/user/getAllManager`, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            status: 'false',\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Menu} from 'antd'\r\nimport logo from '../images/logo.png'\r\nimport { BookOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst ManagerSidebar = () => {\r\n    let history= useHistory();\r\n\r\n    const project = async () => {\r\n        history.push(\"/dash\")\r\n      }\r\n\r\n    const account = async () => {\r\n        history.push(\"/account\")\r\n      }\r\n    return (\r\n        <div>\r\n             <img alt=\"\" src={logo} className=\"logo\"/>\r\n          <Menu>\r\n          <Menu.Item key=\"1\" icon={<BookOutlined />} className=\"menu1\" onClick={project}>\r\n           Project\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\" icon={<UserOutlined />} className=\"menu1\" onClick={account}>\r\n            Account\r\n          </Menu.Item>\r\n          </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerSidebar\r\n","import React from 'react'\r\nimport { Button, PageHeader } from 'antd'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { onUserLogout } from '../../services/authAPI';\r\n\r\n\r\nconst HeaderManager = () => {\r\n    let history= useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = async () => { \r\n        try {\r\n          const tokens = {\r\n            refreshToken: localStorage.getItem(\"refreshToken\"),\r\n            accessToken: localStorage.getItem(\"accessToken\")\r\n          }\r\n          \r\n          onUserLogout(tokens)\r\n          localStorage.removeItem(\"accessToken\");\r\n          localStorage.removeItem(\"refreshToken\");\r\n          dispatch({\r\n            type: \"VERIFIED_AUTHENTICATION\",\r\n            value: false\r\n         })\r\n          history.push('/')\r\n        } catch (error) {\r\n          console.error(error)\r\n          alert(error.response.data.error);\r\n        }\r\n      };\r\n\r\n\r\n    return (\r\n        <div>\r\n             <PageHeader onBack={()=> window.history.back() } title=\"Projects\" extra={<Button type='link' onClick={handleLogout}  style={{float: 'right', color:'black', fontFamily: 'Montserrat'}}>Logout</Button>}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderManager\r\n","import React from 'react'\r\nimport {  Menu, notification } from 'antd'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { onUserLogout } from '../../services/authAPI';\r\nimport { UserOutlined, BookOutlined, MenuOutlined } from '@ant-design/icons';\r\nimport logo from '../images/logo.png'\r\nimport '../../styles/CSS/Userdash.css'\r\n\r\n\r\nconst ManagerHeaderMobile = () => {\r\n    let history= useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const {SubMenu}= Menu\r\n\r\n    const notif = (type, message) => {\r\n      notification[type]({\r\n        message: 'Notification',\r\n        description:\r\n          message,\r\n      });\r\n    };\r\n\r\n    const handleLogout = async () => { \r\n        try {\r\n          const tokens = {\r\n            refreshToken: localStorage.getItem(\"refreshToken\"),\r\n            accessToken: localStorage.getItem(\"accessToken\")\r\n          }\r\n          \r\n          onUserLogout(tokens)\r\n          localStorage.removeItem(\"accessToken\");\r\n          localStorage.removeItem(\"refreshToken\");\r\n          dispatch({\r\n            type: \"VERIFIED_AUTHENTICATION\",\r\n            value: false\r\n         })\r\n          history.push('/')\r\n        } catch (error) {\r\n          notif('error',error.response.data.error);\r\n        }\r\n      };\r\n\r\n      const studies = async() => {\r\n        history.push('/dash')\r\n      }\r\n\r\n    const account = async () => {\r\n        history.push(\"/account\")\r\n      }\r\n\r\n    return (\r\n        <div  style={{background:'white',height: '50px', minWidth: '100vh'}}>\r\n            <div style={{float:'left'}}>\r\n            <Menu triggerSubMenuAction=\"click\">\r\n                    <SubMenu key=\"sub1\" icon={<MenuOutlined/>}>\r\n                        <Menu.Item key=\"1\" icon={<UserOutlined/>} onClick={account}>\r\n                            Account\r\n                        </Menu.Item>\r\n                        <Menu.Item icon={<BookOutlined/>} key=\"2\" onClick={studies}>\r\n                            Projects\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"3\" onClick={handleLogout}>\r\n                            Logout\r\n                        </Menu.Item>\r\n                    </SubMenu>\r\n                </Menu>\r\n                </div>\r\n        <div style={{display: 'flex', alignItems:'center', justifyContent:'center'}}>\r\n            \r\n            <div style={{display: 'flex', marginTop:'5px', alignItems:'center'}}>\r\n            <img alt=\"\" src={logo} style={{width: '40px', height: '40px'}}/>\r\n            <h3>Virtual Research Management System</h3>\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerHeaderMobile\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Button, Table,Progress, Spin, Popconfirm, notification } from 'antd'\r\nimport '../styles/CSS/Userdash.css'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { onDeleteProject, onGetProjectforManager } from '../services/projectAPI';\r\n\r\n\r\n\r\n\r\nconst ManagerDash = (props) => {\r\n  const dispatch = useDispatch()\r\n  let history= useHistory();\r\n  const userObj = useSelector(state => state.user)\r\n  const [projectData, setProjectData]= useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const notif = (type, message) => {\r\n    notification[type]({\r\n      message: 'Notification',\r\n      description:\r\n        message,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getProjects(){\r\n        setLoading(true)\r\n        let result = await onGetProjectforManager({user: userObj.USER.name})\r\n        let projectResult = result.data\r\n        let tempProjectData = []\r\n        for(let i = 0; i < projectResult.length; i++){ \r\n            tempProjectData.push({\r\n                key:  projectResult[i],\r\n                projectID:  projectResult[i].projectID,\r\n                projectLeader:  [projectResult[i].assignee],\r\n                projectName:  projectResult[i].projectName,\r\n                dateCreated: moment( projectResult[i].dateCreated).format('MM-DD-YYYY'),\r\n                dateUpdated: moment( projectResult[i].dateUpdated).format('MM-DD-YYYY'),\r\n                progress:  projectResult[i].progress,\r\n            });\r\n            \r\n          }\r\n        setProjectData(tempProjectData)\r\n        setLoading(false)\r\n      }\r\n\r\n      getProjects()\r\n}, [userObj.USER.name])\r\n\r\nuseEffect(() => {\r\n    if(props.data === null||props.data === undefined||props.data === ''){\r\n        return\r\n    }else{\r\n    setProjectData([...projectData, {key: projectData.length + 1,\r\n        projectID:props.data.projectID,\r\n        projectLeader: [props.data.assignee],\r\n        projectName: props.data.projectName,\r\n        dateCreated: moment(props.data.dateCreated).format('MM-DD-YYYY'),\r\n        dateUpdated: moment(props.data.dateUpdated).format('MM-DD-YYYY'),\r\n        progress: props.data.progress\r\n    }])\r\n    }\r\n}, [props.data])\r\n\r\n\r\nconst handleRemove = (key) => { //deleting datasheet\r\n  let newData = projectData.filter((tempData) => {\r\n    return tempData.key !== key\r\n  })\r\n  setProjectData(newData)\r\n}\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Project ID',\r\n      dataIndex: 'projectID',\r\n      key: 'projectID',\r\n      width: '10%',\r\n      defaultSortOrder: 'descend',\r\n      sorter: (a, b) => a.studyno - b.studyno,\r\n    },\r\n    {\r\n      title: 'Date Created',\r\n      dataIndex: 'dateCreated',\r\n      key: 'dateCreated',\r\n      width: '15%',\r\n      \r\n    },\r\n    {\r\n      title: 'Project Leader',\r\n      dataIndex: 'projectLeader',\r\n      key: 'projectLeader',\r\n      width: '15%',\r\n      render: ([leader]) => leader.map( lead =>\r\n        <div style={{display: 'grid'}}>\r\n        <p>{lead}</p>\r\n      </div>\r\n        )\r\n      \r\n      \r\n    },\r\n    {\r\n      title: 'Project Name',\r\n      dataIndex: 'projectName',\r\n      key: 'projectName',\r\n      width: '25%',\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: 'Progress',\r\n      dataIndex: 'progress',\r\n      key: 'progress',\r\n      width: '15%',\r\n      render: progress =>\r\n       <Progress percent={progress} size=\"small\" />,\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: 'action',\r\n      key: 'action',\r\n      width: '20%',\r\n      render: (text, record, index) => <div style={{display: 'flex', flexDirection:'row', gap:'5px'}}>\r\n        <Button onClick = {\r\n        (e) => {\r\n          dispatch({\r\n            type: \"SET_PROJECT\",\r\n            value: record\r\n         })\r\n         history.push('/studies')\r\n        }\r\n      } className=\"manageBtn\">MANAGE</Button>\r\n\r\n      <Popconfirm title=\"Sure to delete?\" onConfirm = {\r\n           async (key) => {\r\n                let id ={_id: record.key._id}\r\n                let result = await onDeleteProject(id)\r\n                await handleRemove(record.key)\r\n                notif(\"error\", result.data.message)\r\n            }\r\n          }>\r\n      <Button danger>DELETE</Button>\r\n      </Popconfirm>\r\n      </div>\r\n    },\r\n  ];\r\n\r\n    return (\r\n    <div>      \r\n        {loading?  <Spin className=\"spinner\" /> :<Table size=\"small\" scroll={{ x: 1500, y: 500 }} dataSource={projectData} columns={columns} style={{margin: '15px'}}></Table> }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ManagerDash\r\n","import { Input, Button, Form, Row, Select, Layout, Tooltip, Modal, notification} from 'antd';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { onProjectCreate } from '../services/projectAPI.js';\r\nimport { onGetAllManagers } from '../services/userAPI';\r\nimport Sidebar from '../components/components/ManagerSidebar'\r\nimport Headers from '../components/components/HeaderManager'\r\nimport MobileHeader from '../components/components/ManagerHeaderMobile';\r\nimport ManagerDash from './ManagerDash.js';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst { Header, Content, Sider } = Layout;\r\n\r\nconst Project = () => {\r\n    const { Option } = Select;\r\n    const userObj = useSelector(state => state.user)\r\n\r\n    const [userData, setUserData] = useState([])\r\n    const [project, setProject] = useState({projectName: '', assignee: '', user: userObj.USER.name});\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [forProps, setForProps] = useState()\r\n\r\n    function handleChange(value) {   //for assigning user\r\n        setProject({...project, assignee: value})\r\n    }\r\n\r\n    const notif = (type, message) => {\r\n        notification[type]({\r\n          message: 'Notification',\r\n          description:\r\n            message,\r\n        });\r\n      };\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n      };\r\n    \r\n      const handleOk = () => {\r\n        setIsModalVisible(false);\r\n      };\r\n    \r\n      const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n      };\r\n\r\n    useEffect(() => {\r\n        async function getUsers(){\r\n            let resultUsers = await onGetAllManagers()\r\n            let x = resultUsers.data\r\n            let tempUserData = []\r\n            for(let i = 0; i < x.length; i++){ \r\n                tempUserData.push({\r\n                    key: x[i].name,\r\n                    name:  x[i].name,\r\n                    value:  x[i].name,\r\n                })\r\n            }\r\n            setUserData(tempUserData)\r\n        }\r\n       getUsers()\r\n    }, [])\r\n\r\n    async function onSubmit(){\r\n        try {\r\n          let result =  await onProjectCreate(project) \r\n          notif(\"success\",result.data.message)\r\n          setProject({projectName: \"\", assignee: \"\"})\r\n          setForProps(result.data.newProject)\r\n        } catch (error) {\r\n           notif(\"error\",error.response.data.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n        <Layout  > \r\n            <Sider  className=\"sidebar\" >\r\n            <Sidebar/>\r\n            </Sider>\r\n            <Layout >\r\n                <Header className=\"header\" style={{ padding: 0, background:'#f2f2f2' }} >\r\n                    <Headers/>\r\n                </Header>\r\n                <div className=\"mobile-header\">\r\n                    <MobileHeader/>\r\n                </div>\r\n                <Content style={{  minHeight: \"200vh\", minWidth: '100vh', background:'#f2f2f2'}} >          \r\n                    <ManagerDash data={forProps}/>\r\n                    <Tooltip placement=\"top\" title=\"Add Study\">\r\n                        <Button className=\"add-button\" onClick={showModal}>+</Button>\r\n                    </Tooltip>\r\n                    <Modal title=\"Add Project\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                    <Row justify=\"center\">\r\n                        <Form onFinish={onSubmit}>\r\n                            <Form.Item  \r\n                            rules={[\r\n                                {\r\n                                required: true,\r\n                                message: 'Please input project name!',\r\n                                },\r\n                            ]}>\r\n                                <Input placeholder=\"Enter Project Name\" onChange={e => setProject({...project, projectName: e.target.value})} value={project.projectName}></Input>\r\n                            </Form.Item>\r\n                            <Form.Item \r\n                                    rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please assign the project!',\r\n                                    },\r\n                                    ]}>\r\n                                <Select mode=\"tags\" style={{ width: '100%' }} onChange={handleChange} tokenSeparators={[',']} placeholder=\"Assign Project\">\r\n                                {userData.map(user => (\r\n                                    <Option key={user.key} value={user.value}>{user.name}</Option>\r\n                                ))}\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Row justify=\"center\">\r\n                            <Button htmlType=\"submit\" block  style={{background: \"#A0BF85\", borderRadius: \"5px\"}}>CREATE PROJECT</Button>\r\n                            </Row>\r\n                        </Form>\r\n                    </Row>\r\n                    </Modal>\r\n                </Content> \r\n            </Layout>      \r\n        </Layout>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Project\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Layout,Button, Table,Progress, Tag, Spin } from 'antd'\r\nimport '../styles/CSS/Userdash.css'\r\nimport { useHistory } from 'react-router-dom';\r\nimport Sidebar from '../components/components/Sidebar'\r\nimport Headers from '../components/components/Header'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { onGetStudyForUser } from '../services/studyAPI';\r\nimport moment from 'moment';\r\nimport MobileHeader from '../components/components/MobileHeader';\r\nimport Project from './Project';\r\n\r\nconst { Header, Content, Sider } = Layout;\r\n\r\n\r\nconst Userdash = () => {\r\n  const dispatch = useDispatch()\r\n  let history= useHistory();\r\n  const userObj = useSelector(state => state.user)\r\n  const [studyData, setStudyData]= useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n \r\n    \r\n  useEffect(() => {\r\n    async function getStudies(){\r\n      let result = await onGetStudyForUser(userObj.USER)\r\n      setLoading(true)\r\n      let x = result.data\r\n      let tempStudyData = []\r\n      for(let i = 0; i < x.length; i++){ \r\n        tempStudyData.push({\r\n            key: x[i],\r\n            title: x[i].studyTitle,\r\n            studyID: x[i].studyID,\r\n            dateCreated: moment(x[i].dateCreated).format('MM-DD-YYYY'),\r\n            dateUpdated: moment(x[i].dateUpdated).format('MM-DD-YYYY'),\r\n            progress: x[i].progress,\r\n            status: [x[i].status]\r\n        });\r\n      }\r\n    setStudyData(tempStudyData)\r\n    setLoading(false)\r\n    }\r\n      getStudies()\r\n}, [userObj])\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Study ID',\r\n      dataIndex: 'studyID',\r\n      key: 'studyID',\r\n      width: '10%',\r\n      defaultSortOrder: 'descend',\r\n      sorter: (a, b) => a.studyno - b.studyno,\r\n    },\r\n    {\r\n      title: 'Date Created',\r\n      dataIndex: 'dateCreated',\r\n      key: 'dateCreated',\r\n      width: '10%',\r\n      \r\n    },\r\n    {\r\n      title: 'Updated',\r\n      dataIndex: 'dateUpdated',\r\n      key: 'dateUpdated',\r\n      width: '10%',\r\n    },\r\n    {\r\n      title: 'Title',\r\n      dataIndex: 'title',\r\n      key: 'title',\r\n      width: '25%',\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: 'Progress',\r\n      dataIndex: 'progress',\r\n      key: 'progress',\r\n      width: '15%',\r\n      render: () =>\r\n       <Progress percent={studyData.progress} size=\"small\" />,\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      filters: [\r\n        { text: 'Completed', value: 'COMPLETED' },\r\n        { text: 'Ongoing', value: 'ONGOING' },\r\n      ],\r\n      onFilter: (value, record) => record.status.indexOf(value) === 0,\r\n      width: '15%',\r\n      render: status => (\r\n        <span>\r\n          {status.map(status => {\r\n            let color = status === 'Ongoing' ? 'geekblue' : 'green';\r\n            return (\r\n              <Tag color={color} key={status}>\r\n                {status.toUpperCase()}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: 'action',\r\n      key: 'action',\r\n      width: '15%',\r\n      render: (text, record, index) => <Button onClick = {\r\n        (e) => {\r\n          dispatch({\r\n            type: \"SET_STUDY\",\r\n            value: record\r\n         })\r\n         history.push('/datagrid')\r\n        }\r\n      } className=\"manageBtn\">MANAGE</Button>\r\n    },\r\n  ];\r\n  \r\n\r\nreturn (\r\n  <div>\r\n    {userObj.USER.category === \"user\"? \r\n    <Layout  > \r\n        <Sider  className=\"sidebar\" >\r\n            <Sidebar/>\r\n        </Sider>\r\n      <Layout >\r\n        <Header className=\"header\" style={{ padding: 0, background:'#f2f2f2' }} >\r\n          <Headers/>\r\n        </Header>\r\n        <div className=\"mobile-header\">\r\n          <MobileHeader/>\r\n        </div>\r\n      <Content style={{  minHeight: \"200vh\", minWidth: '100vh', background:'#f2f2f2' }} >          \r\n          {loading?  <Spin className=\"spinner\" /> :  <Table size=\"small\" scroll={{ x: 1500, y: 500 }} dataSource={studyData} columns={columns} style={{margin: '15px'}}></Table> }\r\n        </Content> \r\n      </Layout>      \r\n    </Layout>: \r\n    <Project/>}\r\n  </div>\r\n    )\r\n}\r\n\r\nexport default Userdash\r\n","import React from 'react'\r\nimport { useSelector} from 'react-redux';\r\nimport { Typography, Progress, Button} from 'antd'\r\nimport moment from 'moment';\r\nimport '../styles/CSS/Userdash.css'\r\n\r\nconst { Title } = Typography;\r\nconst Label = () => {\r\n\r\n    const studyObj = useSelector(state => state.study)\r\n\r\n    return (\r\n        <div className=\"label-hidden\">\r\n            <Title level={3} className=\"label-header\">{studyObj.STUDY.key.studyTitle}</Title>\r\n            <div style={{textAlign: 'right', position:'relative'}}>\r\n                <div className=\"div-inline-block\">\r\n                <div className=\"div-flex\">\r\n                    <div className=\"div-flex\">\r\n                        <label>Last Updated: </label>\r\n                        <p>{moment(studyObj.STUDY.key.dateUpdated).format('MM-DD-YYYY HH:MM:SS')}</p>\r\n                    </div>\r\n                    <div>\r\n                        <label>@{studyObj.STUDY.key.updatedBy}</label>\r\n                    </div>\r\n                    <div className=\"div-flex\">\r\n                        <label>Deadline:  </label>\r\n                        <p>{moment(studyObj.STUDY.key.deadline).format('MM-DD-YYYY HH:MM:SS')}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"progress-label\" >\r\n            <Progress percent={studyObj.STUDY.key.progress} size=\"small\" style={{maxWidth: '150px'}} />\r\n            <Button style={{background: '#A0BF85', borderRadius: '50px'}}>{studyObj.STUDY.key.status}</Button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Label\r\n","import axios from 'axios'\r\n\r\n\r\n\r\nexport async function onUploadAvatar(file) {\r\n    try {\r\n        return axios.post(\"/v1/upload/avatar\", file, {headers:{\r\n            \"Content-Type\": \"multipart/form-data\",\r\n        }});\r\n\r\n\r\n    } catch (error) {\r\n        return {\r\n            status: 'false',\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport async function onUploadDataGrid(file) {\r\n    try {\r\n        return axios.post(\"/v1/upload/datagrid\", file, {headers:{\r\n            \"Content-Type\": \"multipart/form-data\",\r\n        }});\r\n    } catch (error) {\r\n        return {\r\n            status: 'false',\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import React, {useState, useEffect, useMemo, useCallback} from 'react';\r\nimport {Button, Input, Select, Image, Spin, Modal, Tooltip, notification} from 'antd'\r\nimport { onUpdateDatagrid} from '../services/studyAPI';\r\nimport { useSelector} from 'react-redux';\r\nimport { DynamicDataSheetGrid, \r\n  checkboxColumn,\r\n  textColumn,\r\n  keyColumn} from 'react-datasheet-grid';\r\nimport {CheckSquareFilled, CameraFilled, DeleteFilled, DownloadOutlined, FontSizeOutlined, EyeFilled, LoadingOutlined } from '@ant-design/icons';\r\nimport { onEditDatagrid } from '../services/studyAPI';\r\nimport { onUploadDataGrid } from '../services/uploadAPI';\r\nimport '../styles/CSS/Userdash.css'\r\n\r\n\r\n\r\n\r\nconst EditDataGrid = (props) => {\r\n\r\n  const { Option } = Select\r\n\r\n  const studyObj = useSelector(state => state.study)\r\n  const userObj = useSelector(state => state.user)\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [title, setTitle] = useState() \r\n  const [description, setDescription] = useState()\r\n  const [ data, setData ] = useState([])\r\n  const [display, setDisplay] = useState(\"none\")\r\n  const [columnsData, setColumnsData] = useState([]) // delete columns\r\n  const [addColumnTitle, setAddColumnTitle] = useState() //state for column title\r\n  const [disabledColumn, setDisabledColumn] = useState(true) //disable button for adding column\r\n  const [toRemoveColumn, setToRemoveColumn] = useState() //state to remove column\r\n  const [tempCol, setTempCol] = useState([]) //column state\r\n  const [isModalVisible, setIsModalVisible] = useState(false) //modal for image viewing\r\n  const [imageFilename, setImageFilename] = useState() //to view image\r\n  const [AUTOSAVE_INTERVAL, setAUTOSAVE_INTERVAL] = useState(3000);\r\n  const columns = useMemo(() => tempCol, [tempCol]) //setting columns\r\n  const [disabled, setDisabled] = useState(false); //disable div\r\n\r\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\n  const notif = (type, message) => {\r\n    notification[type]({\r\n      message: 'Notification Title',\r\n      description:\r\n        message,\r\n    });\r\n  };\r\n\r\n  \r\n\r\nconst checkColumnType= (key,title) => {\r\n    switch(key) {\r\n        case 'Checkbox':\r\n          return { ...keyColumn(title, checkboxColumn), title: title, type: 'Checkbox'}\r\n        case 'text':\r\n          return { ...keyColumn(title, textColumn), title: title, type: 'text'}\r\n        case 'camera':\r\n          return { ...keyColumn(title, cameraColumn), title: title, type: 'camera'}\r\n        default:\r\n            return { ...keyColumn(title, textColumn), title: title, type: 'text'}\r\n      }\r\n}\r\n\r\nconst CameraComponent = React.memo(\r\n  ({ rowData, setRowData }) => {\r\n    return (\r\n      <div style={{display:'flex', gap:'5px'}}>\r\n      <div>\r\n        <Button value={rowData}><label className=\"file_input_id\"><CameraFilled/>\r\n        <input type=\"file\"  accept=\"image/*\" onChange={async e => {\r\n              const file = e.target.files[0]\r\n              const data = new FormData()\r\n              data.append(\"file\", file)\r\n              let result = await onUploadDataGrid(data) //uploading\r\n              setRowData(result.data.filename)\r\n              notif('info', result.data.message)\r\n            }\r\n          }\r\n           />\r\n        </label></Button>\r\n        \r\n    </div>\r\n    <div>  <Button onClick={\r\n         async (e) => {\r\n              setImageFilename(rowData) //set the image to view\r\n              showImage()\r\n          }\r\n        }><EyeFilled /></Button></div>\r\n    </div>     \r\n    )\r\n  }\r\n)\r\n\r\nconst cameraColumn = {\r\n  component: CameraComponent,\r\n  deleteValue: () => '',\r\n  copyValue: ({ rowData }) => rowData,\r\n  pasteValue: ({ value }) => value,\r\n}\r\n\r\nconst createRow = useCallback(() => ({}), []) //create row\r\n\r\nuseEffect(() => {\r\n  const timer = setTimeout(()=>{\r\n    async function updateDB(){\r\n      const dataToSend ={\r\n        user: userObj.USER.name,\r\n        title: title,\r\n        description: description,\r\n        studyID: studyObj.STUDY.studyID,\r\n        data: data,\r\n        columns: columns\r\n      }\r\n      setDisabled(true)\r\n      let result = await onUpdateDatagrid(dataToSend)\r\n      notif('success', result.data.message)\r\n      setDisabled(false)\r\n    }\r\n    updateDB()\r\n  }, AUTOSAVE_INTERVAL)\r\n  return () => clearTimeout(timer);\r\n}, [data, title, description, columns])\r\n\r\n\r\n\r\n  useEffect(()=> { //getting data\r\n  try {\r\n    if(props.data === undefined||props.data === null|| props.data === ''){\r\n      return\r\n    }\r\n    async function getEditData(){ //edit data\r\n      setLoading(true)\r\n      let resultDB = await onEditDatagrid(props.data.id)\r\n      let result = resultDB.data\r\n      let tempCols=[]\r\n    for(let i = 0; i < result.length; i++){   \r\n        setTitle(result[i].title)\r\n        setDescription(result[i].description)\r\n        setData(result[i].data) \r\n        for(let j = 0; j < result[i].columns.length ; j++) {\r\n            tempCols.push(checkColumnType(result[i].columns[j].type, result[i].columns[j].title))\r\n        }\r\n        setTempCol(tempCols)   \r\n    }\r\n    setDisplay(props.data.display)\r\n    setLoading(false)\r\n    }\r\n    getEditData()\r\n  } catch (error) {\r\n    notif('error', 'There is something wrong! Unable to display data!')\r\n  }\r\n  \r\n   }, [props.data])\r\n\r\n\r\n\r\n\r\n  useEffect(()=> { //getting columns data\r\n     //delete columns data\r\n  const getColumns= () =>{\r\n    let tempColumns = []\r\n        for(let i = 0; i < columns.length; i++){ \r\n            tempColumns.push({\r\n                key: columns[i].title,\r\n                name:  columns[i].title,\r\n                value:  columns[i].title,\r\n            });\r\n        }\r\n        setColumnsData(tempColumns)\r\n  }\r\n  getColumns()\r\n  }, [tempCol, columns])\r\n\r\n  useEffect(() => { //disable buttons for adding column\r\n    if (addColumnTitle === undefined ||addColumnTitle ==='') {\r\n      setDisabledColumn(true);\r\n    } else {\r\n      setDisabledColumn(false);\r\n    }\r\n  }, [addColumnTitle]);\r\n\r\n\r\n \r\n\r\n  const showImage = () => { //for viewing image\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => { //modal\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {//modal\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  \r\n \r\n  \r\n  const addTextColumn = () => {\r\n    setTempCol([...columns, {\r\n      ...keyColumn(addColumnTitle, textColumn),\r\n      title: addColumnTitle,\r\n      type: 'text'\r\n    }])\r\n    setAddColumnTitle('')\r\n  }\r\n\r\n  const addCheckboxColumn = () => {\r\n    setTempCol([...columns, {\r\n      ...keyColumn(addColumnTitle, checkboxColumn),\r\n      title: addColumnTitle,\r\n      type: 'Checkbox'\r\n    }])\r\n    setAddColumnTitle('')\r\n  }\r\n\r\n  const addCameraColumn = () => {\r\n    setTempCol([...columns, {\r\n      ...keyColumn(addColumnTitle, cameraColumn),\r\n      title: addColumnTitle,\r\n      type: 'camera'\r\n    }])\r\n    setAddColumnTitle('')\r\n  }\r\n\r\n  const removeColumn = (key) => { //removing column\r\n   try {\r\n    let newColumn = columns.filter(value => !key.includes(value.title));\r\n    setTempCol(newColumn)\r\n   } catch (error) {\r\n     notif('error', error)\r\n   }\r\n  }\r\n\r\n  function handleColumnToDelete(value) { //setting column to delete\r\n    setToRemoveColumn(value)\r\n  }\r\n\r\n  async function updateDB(){\r\n    const dataToSend ={\r\n      user: userObj.USER.name,\r\n      title: title,\r\n      description: description,\r\n      studyID: studyObj.STUDY.studyID,\r\n      data: data,\r\n      columns: columns\r\n    }\r\n    setDisabled(true)\r\n    let result = await onUpdateDatagrid(dataToSend)\r\n    notif('success', result.data.message)\r\n    setDisabled(false)\r\n  }\r\n\r\n  function hideTableEdit(){\r\n    setDisplay(\"none\")\r\n  }\r\n\r\n  async function downloadCSV(){\r\n    let csv = ''\r\n    let keys = Object.keys(data[0])\r\n    keys.forEach((key) => {\r\n      csv += key + \",\"\r\n    })\r\n    csv += \"\\n\"\r\n\r\n    data.forEach((datarow) => {\r\n      keys.forEach((key)=>{\r\n        csv += datarow[key] + \",\"\r\n      })\r\n      csv += \"\\n\"\r\n    });\r\n      const element = document.createElement('a')\r\n      const file = new Blob([csv], {type: 'data:text/csv;charset=utf-8'})\r\n      element.href = URL.createObjectURL(file)\r\n      element.download = `${title}.csv`\r\n      document.body.appendChild(element)\r\n      element.click()\r\n      notif('success', 'Downloaded!')\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <div  style={{display: display, marginTop: '20px'}}>\r\n        <h1 style={{fontFamily: 'Montserrat', fontSize: '20px'}}>Edit Table</h1> \r\n        <div className=\"add-grid\">\r\n          <div style={{display:'grid'}}>\r\n            <label style={{fontSize: '20px', fontFamily:'Montserrat'}}>Table Title</label>\r\n            <Input  placeholder=\"Input table title\" onChange={(e)=> {setTitle(e.target.value)}} value={title}/> \r\n          </div>\r\n          <div style={{display:'grid'}}>\r\n            <label style={{fontSize: '20px', fontFamily:'Montserrat'}}>Table Description</label>\r\n            <Input  placeholder=\"Enter table description\" onChange={(e)=> {setDescription(e.target.value)}} value={description}></Input>\r\n          </div>\r\n          <div style={{display:'grid'}}>\r\n            <label style={{fontSize: '20px', fontFamily:'Montserrat'}}>Column Title</label>\r\n            <div style={{display:'flex', flexDirection:'row', gap:'3px'}}>\r\n              <Input  placeholder=\"Enter Column title\" onChange={(e)=> {setAddColumnTitle(e.target.value)}} value={addColumnTitle}></Input>\r\n              <Tooltip placement='top' title='Text Column'>\r\n              <Button disabled={disabledColumn}  onClick={addTextColumn}><FontSizeOutlined /></Button>\r\n              </Tooltip>\r\n              <Tooltip placement='top' title='Checkbox Column'>\r\n              <Button disabled={disabledColumn}  onClick={addCheckboxColumn} ><CheckSquareFilled /></Button>\r\n              </Tooltip>\r\n              <Tooltip placement='top' title='Camera Column'>\r\n              <Button disabled={disabledColumn} onClick={addCameraColumn} ><CameraFilled /></Button>\r\n              </Tooltip>\r\n            </div>\r\n          </div>\r\n          <div style={{display:'grid'}}>\r\n          <label style={{fontSize: '20px', fontFamily:'Montserrat'}}>Delete Column </label>\r\n          <div style={{display:'flex', flexDirection:'row', gap:'5px', width:'300px'}}>\r\n            <Select placeholder=\"Select column title to delete\" onChange={handleColumnToDelete} mode=\"tags\" tokenSeparators={[',']} style={{ width: '100%' }}>\r\n              {columnsData.map(column => (\r\n                <Option key={column.key} value={column.value}>{column.name}</Option>\r\n              ))}\r\n            </Select>\r\n              <Tooltip placement='top' title='Delete Selected Column'> \r\n                    <Button danger onClick={() => removeColumn(toRemoveColumn)}><DeleteFilled/></Button> \r\n                </Tooltip>\r\n                <Tooltip placement='top' title='Download table in CSV'> \r\n                    <Button  onClick={downloadCSV}><DownloadOutlined/></Button>\r\n                </Tooltip>\r\n          </div>\r\n          </div>\r\n        </div>  \r\n        <div style={{marginTop:'20px'}}>\r\n            {loading ?  <div className=\"spinner\"><Spin indicator={antIcon}/> </div>: \r\n            <div style={{\r\n              opacity: disabled ? 0.25 : 1,\r\n              pointerEvents: disabled ? \"none\" : \"initial\"\r\n            }}><DynamicDataSheetGrid\r\n                data={data}\r\n                onChange={setData}\r\n                columns={columns}\r\n                createRow={createRow}\r\n            />\r\n              <Modal title=\"View Image\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n              <div style={{display: 'grid' }}>\r\n                <Image src={`/datagrid/${imageFilename}`}/>\r\n              </div>\r\n              </Modal>\r\n              </div> }\r\n        <div style={{float:'right', rowGap:'0px', gap:'5px', display:'flex', marginTop:'20px'}}>\r\n          <Button type=\"primary\" onClick={updateDB}>Save</Button>\r\n          <Button danger onClick={hideTableEdit}>Exit</Button>\r\n        </div>\r\n        </div>   \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditDataGrid\r\n","import React, {useEffect, useState, useMemo} from 'react';\r\nimport { Table, Button, Popconfirm, Form, Spin, notification, Tooltip, Modal, Empty } from 'antd';\r\nimport { DeleteFilled, EditFilled, DownloadOutlined, InfoCircleFilled } from '@ant-design/icons';\r\nimport { onDeleteDatagrid, onDownloadHistory, onEditDatagrid, onGetDatagrid, onGetDownloadHistory } from '../services/studyAPI';\r\nimport { useSelector} from 'react-redux';\r\nimport moment from 'moment';\r\nimport EditDatagrid from './EditDatagrid'\r\nimport '../styles/CSS/Userdash.css'\r\n\r\n\r\nconst GridTable = (props) => {\r\n    const studyObj = useSelector(state => state.study)\r\n    const userObj = useSelector(state => state.user)\r\n    const [tableData, setTableData] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [editData, setEditData] = useState()\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [history, setHistory] = useState([])\r\n    const [loadingModal, setLoadingModal] = useState(false)\r\n  \r\n\r\n    const notif = (type, message) => {\r\n      notification[type]({\r\n        message: 'Notification',\r\n        description:\r\n          message,\r\n      });\r\n    };\r\n\r\n    const handleRemove = (key) => { //deleting datasheet\r\n        let newData = tableData.filter((tempData) => {\r\n          return tempData.key !== key\r\n        })\r\n        setTableData(newData)\r\n      }\r\n\r\n    const finaldata = useMemo(() => tableData, [tableData]) //final table data\r\n\r\n  useEffect(() => { //getting data\r\n    async function getDatagridData(){ //displaying data in table\r\n        let ID = {studyID: studyObj.STUDY.studyID}\r\n        setLoading(true)\r\n        let result =await onGetDatagrid(ID)\r\n        let x = result.data\r\n        let tempTableData = []\r\n        for(let i = 0; i < x.length; i++){ \r\n          tempTableData.push({\r\n            key: x[i],\r\n            tableID: x[i].tableID,\r\n            title: x[i].title,\r\n            description: x[i].description,\r\n            dateCreated: moment(x[i].dateCreated).format('MM-DD-YYYY'),\r\n            dateUpdated: moment(x[i].dateUpdated).format('MM-DD-YYYY'),\r\n          });\r\n        }\r\n        setTableData(tempTableData)\r\n        setLoading(false)\r\n    }\r\n    getDatagridData()\r\n  }, [studyObj.STUDY.studyID])\r\n\r\n  const showModal = async(id) => {\r\n    setLoadingModal(true)\r\n    let result = await onGetDownloadHistory({tableID: id._id})\r\n    let history = result.data.history\r\n    let tempHistory = []\r\n        for(let i = 0; i < history.length; i++){ \r\n          tempHistory.push({\r\n            downloadedBy: history[i].downloadedBy,\r\n            downloadDate: moment(history[i].downloadDate).format('YYYY-MM-DD HH:mm:ss'),\r\n          });\r\n        }\r\n        setHistory(tempHistory)\r\n    setIsModalVisible(true);\r\n    setLoadingModal(false)\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  async function downloadCSV(data){\r\n    let toDownload = data[0].data\r\n    let csv = ''\r\n    let keys = Object.keys(data[0].data[0])\r\n    keys.forEach((key) => {\r\n      csv += key + \",\"\r\n    })\r\n    csv += \"\\n\"\r\n\r\n    toDownload.forEach((datarow) => {\r\n      keys.forEach((key)=>{\r\n        csv += datarow[key] + \",\"\r\n      })\r\n      csv += \"\\n\"\r\n    });\r\n      const element = document.createElement('a')\r\n      const file = new Blob([csv], {type: 'data:text/csv;charset=utf-8'})\r\n      element.href = URL.createObjectURL(file)\r\n      element.download = `${data[0].title}.csv`\r\n      document.body.appendChild(element)\r\n      element.click()\r\n  }\r\n\r\n  useEffect(() => { //displaying the added table\r\n    if(props.data == null||undefined||''){\r\n        return\r\n    }else{\r\n    setTableData([...tableData, {key: tableData.length + 1,\r\n        tableID:props.data.tableID,\r\n        title: props.data.title,\r\n        description: props.data.description,\r\n        dateCreated: moment(props.data.dateCreated).format('MM-DD-YYYY'),\r\n        dateUpdated: moment(props.data.dateUpdated).format('MM-DD-YYYY'),\r\n    }])\r\n    async function getDatagridData(){ //displaying data in table\r\n        let ID = {studyID: studyObj.STUDY.studyID}\r\n        setLoading(true)\r\n        let result =await onGetDatagrid(ID)\r\n        let x = result.data\r\n        let tempTableData = []\r\n        for(let i = 0; i < x.length; i++){ \r\n          tempTableData.push({\r\n            key: x[i],\r\n            tableID: x[i].tableID,\r\n            title: x[i].title,\r\n            description: x[i].description,\r\n            dateCreated: moment(x[i].dateCreated).format('MM-DD-YYYY'),\r\n            dateUpdated: moment(x[i].dateUpdated).format('MM-DD-YYYY'),\r\n          });\r\n        }\r\n        setTableData(tempTableData)\r\n        setLoading(false)\r\n    }\r\n    getDatagridData()\r\n    }\r\n   }, [props.data, studyObj.STUDY.studyID])\r\n\r\n   \r\n    const columns = [\r\n        {\r\n          title: 'Table ID',\r\n          width: '10%',\r\n          dataIndex: 'tableID',\r\n          key: 'tableID',\r\n        },\r\n        {\r\n          title: 'Title',\r\n          width: '25%',\r\n          dataIndex: 'title',\r\n          key: 'title',\r\n          ellipsis: true\r\n        },\r\n        {\r\n            title: 'Description',\r\n            width: '25%',\r\n            dataIndex: 'description',\r\n            key: 'description',\r\n            ellipsis: true\r\n        },\r\n        {\r\n            title: 'Date Created',\r\n            width: '10%',\r\n            dataIndex: 'dateCreated',\r\n            key: 'dateCreated',\r\n        },\r\n        {\r\n            title: 'Date Updated',\r\n            width: '10%',\r\n            dataIndex: 'dateUpdated',\r\n            key: 'dateUpdated',\r\n        },\r\n        {\r\n          title: 'Action',\r\n          key: 'operation',\r\n          width: '20%',\r\n          render: (text, record, index) => \r\n            <Form style={{display:'flex', gap:'5px'}}>\r\n              <div>\r\n                <Tooltip title='Download table in CSV' placement='rightTop'>\r\n                <Button  onClick={async (e) => {\r\n                    let id ={_id: record.key._id}\r\n                    let result = await onEditDatagrid(id)\r\n                    let x = result.data\r\n                    downloadCSV(x)\r\n                    let resultDownload = await onDownloadHistory({user: userObj.USER.name, tableID: id})\r\n                    notif(\"info\", resultDownload.data.message)\r\n                }} icon={<DownloadOutlined/>}></Button>\r\n                </Tooltip>\r\n              </div>\r\n              <Tooltip title='Edit table' placement='rightTop'>\r\n          <Button onClick = {\r\n           async (e) => {\r\n                let id ={tableID: record.key.tableID}\r\n                setEditData({id:id, display: 'block'})\r\n            }\r\n          }   icon={<EditFilled />}></Button>\r\n          </Tooltip>\r\n          <Tooltip title='Delete table' placement='rightTop'>\r\n          <Popconfirm title=\"Sure to delete?\" onConfirm = {\r\n           async (key) => {\r\n                let id ={_id: record.key._id}\r\n                await onDeleteDatagrid(id)\r\n                await handleRemove(record.key)\r\n                notif(\"error\", \"Deleted\")\r\n            }\r\n          }>\r\n          <Button danger icon={<DeleteFilled />}></Button>\r\n        </Popconfirm>\r\n        </Tooltip>\r\n        <Tooltip title='View Download History' placement='rightTop'>\r\n          <Button onClick={()=>{\r\n            let id ={_id: record.key._id}\r\n            showModal(id)}} icon={<InfoCircleFilled />}/>\r\n        </Tooltip>\r\n        </Form>,\r\n                    \r\n        },\r\n      ];\r\n\r\n      const historyColumns=[\r\n        {\r\n          title: 'Downloader',\r\n          width: '50%',\r\n          dataIndex: 'downloadedBy',\r\n          key: 'downloadedBy',\r\n        },\r\n        {\r\n          title: 'Download Date',\r\n          width: '50%',\r\n          dataIndex: 'downloadDate',\r\n          key: 'downloadDate',\r\n        }\r\n      ]\r\n\r\n\r\n\r\n    return (\r\n        <div style={{marginTop: '20px'}}>\r\n            {loading ?  <div className=\"spinner\"><Spin /> </div> : <div> \r\n            <Table scroll={{ x: 1300, y: 500 }} columns={columns} dataSource={finaldata} /> \r\n            </div>\r\n           }\r\n            <EditDatagrid data={editData}/>\r\n            <Modal title=\"Add Study\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n              {loadingModal? <div className=\"spinner\"><Spin /> </div> : <div>\r\n                {history.length === 0 ? <Empty/> : \r\n                <div style={{justifyContent: 'center', alignItems: 'center', marginLeft:'20px'}}> \r\n                  <Table pagination={false} scroll={{y: 500}} columns={historyColumns} dataSource={history} />\r\n                </div>\r\n                }\r\n                </div>}\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GridTable\r\n","import React, {useState, useEffect, useMemo, useCallback} from 'react';\r\nimport {Button, Input, Select, notification, Modal, Image, Tooltip} from 'antd'\r\nimport { onAddDatagrid} from '../services/studyAPI';\r\nimport { useSelector} from 'react-redux';\r\nimport { DynamicDataSheetGrid, \r\n  checkboxColumn,\r\n  textColumn,\r\n  keyColumn  } from 'react-datasheet-grid'\r\nimport GridTable from './GridTable';\r\nimport {CheckSquareFilled, CameraFilled, DeleteFilled, DownloadOutlined, FontSizeOutlined, EyeFilled, PlusSquareFilled} from '@ant-design/icons';\r\nimport { onUploadDataGrid } from '../services/uploadAPI';\r\nimport '../styles/CSS/Userdash.css'\r\n\r\n\r\nconst DataGrid = () => {\r\n\r\n  const { Option } = Select\r\n\r\n  const studyObj = useSelector(state => state.study) //study reducer\r\n  const userObj = useSelector(state => state.user) //user reducer\r\n  const [addTableStyle, setAddTableStyle] = useState(\"none\")\r\n  const [title, setTitle] = useState() \r\n  const [description, setDescription] = useState()\r\n  const [ data, setData ] = useState([])\r\n  const [columnsData, setColumnsData] = useState([]) // adding columns\r\n  const [addColumnTitle, setAddColumnTitle] = useState()\r\n  const [disabledColumn, setDisabledColumn] = useState(true)\r\n  const [toRemoveColumn, setToRemoveColumn] = useState()\r\n  const [disabledCreate, setDisabledCreate] = useState(true)\r\n  const [addTable, setAddTable] = useState() //add data to table\r\n  const [tempCol, setTempCol] = useState( [{ //column\r\n    ...keyColumn('Checkbox', checkboxColumn),\r\n    title: 'Checkbox',\r\n    type: 'Checkbox'\r\n  }])\r\n  const [isModalVisible, setIsModalVisible] = useState(false) //modal for image viewing\r\n  const [imageFilename, setImageFilename] = useState() //to view image\r\n\r\n  const notif = (type, message) => {\r\n    notification[type]({\r\n      message: 'Notification Title',\r\n      description:\r\n        message,\r\n    });\r\n  };\r\n\r\n  const CameraComponent = React.memo(\r\n    ({ rowData, setRowData }) => {\r\n      return (\r\n        <div style={{display:'flex', gap:'5px'}}>\r\n        <div>\r\n          <Button value={rowData}><label className=\"file_input_id\"><CameraFilled/>\r\n          <input type=\"file\"  accept=\"image/*\" onChange={async e => {\r\n                const file = e.target.files[0]\r\n                const data = new FormData()\r\n                data.append(\"file\", file)\r\n                let result = await onUploadDataGrid(data) //uploading\r\n                setRowData(result.data.filename)\r\n              }\r\n            }\r\n             />\r\n          </label></Button>\r\n          \r\n      </div>\r\n      <div>  <Button onClick={\r\n           async (e) => {\r\n                setImageFilename(rowData) //set the image to view\r\n                showImage()\r\n            }\r\n          }><EyeFilled /></Button></div>\r\n      </div>     \r\n      )\r\n    }\r\n  )\r\n\r\n  const cameraColumn = {\r\n    component: CameraComponent,\r\n    deleteValue: () => '',\r\n    copyValue: ({ rowData }) => rowData,\r\n    pasteValue: ({ value }) => value,\r\n  }\r\n\r\n  const columns = useMemo(() => tempCol, [tempCol]) //displaying columns in datasheet \r\n  const createRow = useCallback(() => ({}), []) //creating row\r\n  \r\n  const addTextColumn = () => {\r\n    setTempCol([...columns, {\r\n      ...keyColumn(addColumnTitle, textColumn),\r\n      title: addColumnTitle,\r\n      type: 'text'\r\n    }])\r\n    setAddColumnTitle('')\r\n  }\r\n\r\n  useEffect(()=> { //getting column\r\n      //adding columns\r\n  const getColumns= () =>{\r\n    let tempColumns = []\r\n        for(let i = 0; i < columns.length; i++){ \r\n            tempColumns.push({\r\n                key: columns[i].title,\r\n                name:  columns[i].title,\r\n                value:  columns[i].title,\r\n            });\r\n        }\r\n        setColumnsData(tempColumns)\r\n  }\r\n    getColumns()\r\n  }, [tempCol, columns])\r\n\r\n  useEffect(() => { //disable column\r\n    if (addColumnTitle === undefined ||addColumnTitle ==='') {\r\n      setDisabledColumn(true);\r\n    } else {\r\n      setDisabledColumn(false);\r\n    }\r\n  }, [addColumnTitle]);\r\n\r\n  useEffect(() => { //create button disable\r\n    if (title === undefined ||title ===''|| description === undefined ||description ==='') {\r\n      setDisabledCreate(true);\r\n    } else {\r\n      setDisabledCreate(false);\r\n    }\r\n  }, [title,description]);\r\n\r\n\r\n  const addCheckboxColumn = () => {\r\n    setTempCol([...columns, {\r\n      ...keyColumn(addColumnTitle, checkboxColumn),\r\n      title: addColumnTitle,\r\n      type:'Checkbox'\r\n    }])\r\n    setAddColumnTitle('')\r\n  }\r\n\r\n  const addCameraColumn = () => {\r\n    setTempCol([...columns, {\r\n      ...keyColumn(addColumnTitle, cameraColumn),\r\n      title: addColumnTitle,\r\n      type:'camera'\r\n    }])\r\n    setAddColumnTitle('')\r\n  }\r\n\r\n  const removeColumn = (key) => {\r\ntry {\r\n  let newColumn = columns.filter(value => !key.includes(value.title));\r\n  setTempCol(newColumn)\r\n} catch (error) {\r\n  notif('error', error)\r\n}\r\n  }\r\n\r\n  function handleColumnToDelete(value) { //handling deleting column\r\n    setToRemoveColumn(value)\r\n  }\r\n\r\n\r\n  async function saveToDB(){\r\n    const dataToSend ={\r\n      user: userObj.USER.name,\r\n      title: title,\r\n      description: description,\r\n      studyID: studyObj.STUDY.studyID,\r\n      data: data,\r\n      columns: tempCol\r\n    }\r\n    let result = await onAddDatagrid(dataToSend)\r\n    if(result.status === 200){\r\n      setAddTable(result.data.data)\r\n      setTitle('')\r\n      setDescription('')\r\n      setTempCol([{\r\n        ...keyColumn('Checkbox', checkboxColumn),\r\n        title: 'Checkbox',\r\n        type: 'Checkbox'\r\n      }])\r\n      setData([])\r\n      notif('success', result.data.message)\r\n      setAddTableStyle('none')\r\n    }else{\r\n     notif('error', result.data.message)\r\n    }\r\n  }\r\n\r\n  const showImage = () => { //for viewing image\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => { //modal\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {//modal\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  async function downloadCSV(){\r\n    try {\r\n      let csv = ''\r\n    let keys = Object.keys(data[0])\r\n    keys.forEach((key) => {\r\n      csv += key + \",\"\r\n    })\r\n    csv += \"\\n\"\r\n\r\n    data.forEach((datarow) => {\r\n      keys.forEach((key)=>{\r\n        csv += datarow[key] + \",\"\r\n      })\r\n      csv += \"\\n\"\r\n    });\r\n      const element = document.createElement('a')\r\n      const file = new Blob([csv], {type: 'data:text/csv;charset=utf-8'})\r\n      element.href = URL.createObjectURL(file)\r\n      element.download = `${title}.csv`\r\n      document.body.appendChild(element)\r\n      element.click()\r\n      notif('success', \"Download sucessful!\")\r\n    } catch (error) {\r\n      notif('error', 'Download failed!')\r\n    }\r\n      \r\n  }\r\n\r\n  function showTable() { \r\n    setAddTableStyle(\"block\")\r\n  }\r\n  function hideTable(){\r\n    setAddTableStyle(\"none\")\r\n  }\r\n  return (\r\n    <div>\r\n      <GridTable  data={addTable}/>\r\n      <div >\r\n      <Tooltip placement=\"top\" title=\"Add Table\">\r\n      <Button style={{background: '#A0BF85', marginTop: '15px' }} onClick={showTable} icon={<PlusSquareFilled/>}>Add Table</Button>\r\n      </Tooltip>\r\n      </div>\r\n      <div style={{display: addTableStyle}}>\r\n        <h1 style={{fontFamily: 'Montserrat', fontSize: '20px'}}>Add Table</h1>\r\n        <div className=\"add-grid\">\r\n          <div style={{display:'grid'}}>\r\n          <label style={{fontSize: '20px', fontFamily:'Montserrat'}}>Table Title</label>\r\n          <Input  placeholder=\"Input table title\" onChange={(e)=> {setTitle(e.target.value)}} value={title}/> \r\n          </div>\r\n          <div style={{display:'grid'}}>\r\n          <label style={{fontSize: '20px', fontFamily:'Montserrat'}}>Table Description</label>\r\n          <Input  placeholder=\"Enter table description\" onChange={(e)=> {setDescription(e.target.value)}} value={description}></Input>\r\n          </div>\r\n          <div style={{display:'grid'}}>\r\n          <label style={{fontSize: '20px', fontFamily:'Montserrat'}}>Column Title</label>\r\n          <div style={{display:'flex', flexDirection:'row', gap:'3px'}}>\r\n          <Input  placeholder=\"Enter Column title\" onChange={(e)=> {setAddColumnTitle(e.target.value)}} value={addColumnTitle}></Input>\r\n          <Tooltip placement='top' title='Text Column'>\r\n              <Button disabled={disabledColumn}  onClick={addTextColumn}><FontSizeOutlined /></Button>\r\n              </Tooltip>\r\n              <Tooltip placement='top' title='Checkbox Column'>\r\n              <Button disabled={disabledColumn}  onClick={addCheckboxColumn} ><CheckSquareFilled /></Button>\r\n              </Tooltip>\r\n              <Tooltip placement='top' title='Camera Column'>\r\n              <Button disabled={disabledColumn} onClick={addCameraColumn} ><CameraFilled /></Button>\r\n              </Tooltip>\r\n            </div>\r\n          </div>\r\n          <div style={{display:'grid'}}>\r\n          </div>\r\n          <div style={{display:'grid'}}>\r\n          <label style={{fontSize: '20px', fontFamily:'Montserrat'}}>Delete Column </label>\r\n          <div style={{display:'flex', flexDirection:'row', gap:'5px', width:'300px'}}>\r\n          <Select placeholder=\"Select column title to delete\" onChange={handleColumnToDelete} mode=\"tags\" tokenSeparators={[',']} style={{ width: '100%' }}>\r\n            {columnsData.map(column => (\r\n                            <Option key={column.key} value={column.value}>{column.name}</Option>\r\n                        ))}\r\n            </Select>\r\n            <Tooltip placement='top' title='Delete Selected Column'> \r\n                    <Button danger onClick={() => removeColumn(toRemoveColumn)}><DeleteFilled/></Button> \r\n                </Tooltip>\r\n                <Tooltip placement='top' title='Download table in CSV'> \r\n                    <Button type='primary' onClick={downloadCSV}><DownloadOutlined/></Button>\r\n                </Tooltip>\r\n            </div>\r\n          </div>\r\n          </div>\r\n            <div style={{marginTop:'20px'}}>\r\n            <DynamicDataSheetGrid\r\n                    data={data}\r\n                    onChange={setData}\r\n                    columns={columns}\r\n                    createRow={createRow}\r\n                />\r\n                <Modal title=\"View Image\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                    <div style={{display: 'grid' }}>\r\n                      <Image\r\n                      src={`/datagrid/${imageFilename}`}\r\n                      />\r\n                    </div>\r\n                </Modal>\r\n            <div style={{float:'right', rowGap:'0px', gap:'5px', display:'flex', marginTop:'20px'}}>\r\n            <Button type=\"primary\" disabled={disabledCreate} onClick={saveToDB}>Create</Button>\r\n            <Button danger onClick={hideTable}>Exit</Button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DataGrid\r\n","import axios from 'axios'\r\n\r\n//creating tasks\r\nexport async function onTaskCreate(body) {\r\n    try {\r\n        return axios.post(\"/v1/tasks/createtask\", body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//get all assigned user for the selected study\r\nexport async function onGetUserForTask(body) {\r\n    try {\r\n        return axios.post(`/v1/tasks/getUserForTask`, body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\nexport async function onGetAllTask(body) {\r\n    try {\r\n        return axios.post(`/v1/tasks/getAllTask`, body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\n//get al task for manager\r\nexport async function onGetAllTaskManager(body) {\r\n    try {\r\n        return axios.post(`/v1/tasks/getAllTaskManager`, body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\n//for adding comment\r\nexport async function onAddComment(body) {\r\n    try {\r\n        return axios.post(`/v1/tasks/postComment`, body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\n//displaying all comment\r\n\r\nexport async function onGetALlComment(body) {\r\n    try {\r\n        return axios.post(`/v1/tasks/getAllComment`, body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\n//update task status for manager\r\nexport async function onUpdateTask(body) {\r\n    try {\r\n        return axios.post(`/v1/tasks/onUpdateTask`, body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\n//update task status for user\r\nexport async function onUpdateTaskUser(body) {\r\n    try {\r\n        return axios.post(`/v1/tasks/onUpdateTaskUser`, body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\n//delete task\r\nexport async function onDeleteTask(body) {\r\n    try {\r\n        return axios.post(`/v1/tasks/onDeleteTask`, body, {\r\n            headers: {\r\n                        'Content-Type': 'application/json',\r\n                    } \r\n        });\r\n    } catch (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n}","import React, {  useState, useEffect } from 'react';\r\nimport { Comment, Tooltip, Avatar, Button, notification, Spin } from 'antd';\r\nimport moment from 'moment';\r\nimport { onGetALlComment } from '../services/taskAPI';\r\nimport '../styles/CSS/Userdash.css'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\nconst DisplayComment = (props) => {\r\n    const [comments, setComments] = useState([])\r\n   const [length, setLength] = useState(3)\r\n   const [loading, setLoading] = useState(false)\r\n   const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />; \r\n\r\n   const notif = (type, message) => {\r\n    notification[type]({\r\n      message: 'Notification Title',\r\n      description:\r\n        message,\r\n    });\r\n  };\r\n\r\n   async function getAllComments(){\r\n      setLoading(true)\r\n      let result = await onGetALlComment({taskId: props.data.task})\r\n      let tempCommentData = []\r\n      \r\n      let commentLoop = result.data.comments\r\n      for(let i = 0; i < commentLoop.length; i++){ \r\n          tempCommentData.push({\r\n            author: commentLoop[i].user,\r\n            avatar: commentLoop[i].avatar,\r\n            content: commentLoop[i].comment,\r\n            date: commentLoop[i].dateCreated\r\n          });\r\n        }\r\n        setComments(tempCommentData)\r\n        setLoading(false)\r\n  }\r\n\r\n    useEffect( () => {\r\n        async function getAllComments(){\r\n            //  setLoading(true)\r\n              let result = await onGetALlComment({taskId: props.data.task})\r\n            //  setLoading(false)\r\n              let tempCommentData = []\r\n              \r\n              let commentLoop = result.data.comments\r\n              for(let i = 0; i < commentLoop.length; i++){ \r\n                  tempCommentData.push({\r\n                      key: commentLoop[i],\r\n                    author: commentLoop[i].user,\r\n                    avatar: commentLoop[i].avatar,\r\n                    content: commentLoop[i].comment,\r\n                    date: commentLoop[i].dateCreated\r\n                  });\r\n                }\r\n                setComments(tempCommentData)\r\n               \r\n          }\r\n        getAllComments()\r\n    }, [props.data])\r\n\r\n    \r\n    async function addLength(){\r\n        setLength(length + 2)\r\n        getAllComments()\r\n        if(length >= comments.length){\r\n          notif('info', 'All comments already displayed!')\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n          {loading? <Spin indicator={antIcon} className=\"spinner\" /> :\r\n        <div > \r\n            {comments.slice(0,length).map(comment =>(\r\n              <Comment\r\n                    author={<p>{comment.author}</p>}\r\n                    avatar={\r\n                        <Avatar\r\n                            src={`/avatar/${comment.avatar}`}\r\n                            alt={comment.author}\r\n                        />\r\n                    }\r\n                    content={\r\n                        <p>\r\n                            {comment.content}\r\n                        </p>\r\n                    }\r\n                    datetime={\r\n                        <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\r\n                            <span>{moment(comment.date).format('YYYY-MM-DD HH:mm:ss')}</span>\r\n                        </Tooltip>\r\n                    }\r\n                 /> \r\n        \r\n            ))}\r\n            <div id=\"showComment\" style={{display: 'flex', justifyContent: 'center'}}>\r\n                <Button onClick={addLength}>load more</Button>\r\n            </div>\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayComment\r\n","import React, {useEffect, useState} from 'react'\r\nimport {Comment, Avatar, Form, Button, Input} from 'antd'\r\nimport { useSelector} from 'react-redux';\r\nimport moment from 'moment';\r\nimport { onAddComment } from '../services/taskAPI';\r\nimport DisplayComment from './DisplayComment';\r\n\r\n\r\nconst AddComment = (props) => {\r\n\r\n    const { TextArea } = Input;\r\n\r\n    const userObj = useSelector(state => state.user)\r\n    const studyObj = useSelector(state => state.study)\r\n    let avatar = localStorage.getItem(\"avatarFilename\")\r\n\r\n    const [comment, setComment] = useState({comments: '', submitting: false, value: '', author: `${userObj.USER.name}`,avatar: avatar, datetime: moment().fromNow(),})\r\n    const [task, setTask] = useState() //taskID\r\n  \r\n\r\n  let forProps = {task}\r\n\r\n    async function handleSubmit(){\r\n        let result = await onAddComment({taskID: task, comment, studyID: studyObj.STUDY.studyID})\r\n        setComment({...comment, value: ''})\r\n       forProps = {task, result}\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTask(props.data)\r\n    }, [props.data])\r\n \r\n    \r\n   \r\n    return (\r\n        <div>\r\n           <DisplayComment data={forProps}/>\r\n        <Comment\r\n          avatar={\r\n            <Avatar\r\n              src={`/avatar/${avatar}`}\r\n              alt={userObj.USER.name}\r\n            />\r\n          }\r\n          content={\r\n              <>\r\n            <Form.Item>\r\n            <TextArea rows={4} onChange={e => setComment({...comment, value: e.target.value})} value={comment.value} />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button htmlType=\"submit\" loading={comment.submitting} onClick={handleSubmit} style={{background: '#A0BF85'}}>\r\n              Add Comment\r\n            </Button>\r\n          </Form.Item>\r\n          </>\r\n          }\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddComment\r\n","import React, {useEffect, useState} from 'react'\r\nimport {Button, Collapse, Spin, Empty, Popconfirm, notification, Tooltip } from 'antd'\r\nimport {  onDeleteTask, onGetAllTaskManager, onUpdateTask } from '../services/taskAPI';\r\nimport { useSelector} from 'react-redux';\r\nimport moment from 'moment';\r\nimport AddComment from './AddComment';\r\nimport '../styles/CSS/Userdash.css'\r\nimport { DeleteFilled } from '@ant-design/icons';\r\n\r\n\r\n\r\nconst { Panel } = Collapse;\r\nconst ManagerDisplayTask = (props) => {\r\n    const studyObj = useSelector(state => state.study)\r\n    const projectObj = useSelector(state => state.project)\r\n\r\n    const [task , setTask] = useState([])\r\n    const [loading, setloading] = useState(false)\r\n    \r\n \r\n    \r\n\r\n    const [data, setData] = useState({task: '', length: 3})\r\n\r\n    const notif = (type, message) => {\r\n        notification[type]({\r\n          message: 'Notification Title',\r\n          description:\r\n            message,\r\n        });\r\n      };\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        async function getAllTask (){\r\n            setloading(true)\r\n            let resultTask = await onGetAllTaskManager({studyName: studyObj.STUDY.title})\r\n            let loopTask = resultTask.data.tasks\r\n            let tempTaskData = []\r\n             for(let i = 0; i < loopTask.length; i++){ \r\n               tempTaskData.push({\r\n                 key: [i],\r\n                 id: loopTask[i]._id,\r\n                 createdBy: loopTask[i].createdBy,\r\n                 dateCreated: moment(loopTask[i].dateCreated).format('MM-DD-YYYY HH:MM:SS'),\r\n                 lastUpdated: moment(loopTask[i].lastUpdated).format('MM-DD-YYYY HH:MM:SS'),\r\n                 deadline: moment(loopTask[i].deadline).format('MM-DD-YYYY HH:MM:SS'),\r\n                 taskTitle: loopTask[i].tasksTitle,\r\n                 taskDescription: loopTask[i].tasksDescription,\r\n                 assignee: loopTask[i].assignee,\r\n                 status: loopTask[i].status\r\n               });\r\n             }\r\n             setTask(tempTaskData)\r\n             setloading(false)\r\n        }\r\n        getAllTask()\r\n    }, [studyObj.STUDY.title])\r\n\r\n    useEffect(() => {\r\n        if(props.data == null||undefined||''){\r\n            return\r\n        }else{\r\n        let newTask = props.data.newTask\r\n       setTask([...task, {\r\n           key: task.length +1,\r\n           id: newTask._id,\r\n           createdBy: newTask.createdBy,\r\n           dateCreated: moment(newTask.dateCreated).format('MM-DD-YYYY HH:MM:SS'),\r\n           lastUpdated: moment(newTask.lastUpdated).format('MM-DD-YYYY HH:MM:SS'),\r\n           deadline: moment(newTask.deadline).format('MM-DD-YYYY HH:MM:SS'),\r\n           taskTitle: newTask.tasksTitle,\r\n           taskDescription: newTask.tasksDescription,\r\n           assignee: newTask.assignee,\r\n           status: newTask.status\r\n       }])}\r\n\r\n       async function getAllTask (){\r\n        setloading(true)\r\n        let resultTask = await onGetAllTaskManager({studyName: studyObj.STUDY.title})\r\n        setloading(false)\r\n        let loopTask = resultTask.data.tasks\r\n        let tempTaskData = []\r\n         for(let i = 0; i < loopTask.length; i++){ \r\n           tempTaskData.push({\r\n             key: [i],\r\n             id: loopTask[i]._id,\r\n             createdBy: loopTask[i].createdBy,\r\n             dateCreated: moment(loopTask[i].dateCreated).format('MM-DD-YYYY HH:MM:SS'),\r\n             lastUpdated: moment(loopTask[i].lastUpdated).format('MM-DD-YYYY HH:MM:SS'),\r\n             deadline: moment(loopTask[i].deadline).format('MM-DD-YYYY HH:MM:SS'),\r\n             taskTitle: loopTask[i].tasksTitle,\r\n             taskDescription: loopTask[i].tasksDescription,\r\n             assignee: loopTask[i].assignee,\r\n             status: loopTask[i].status\r\n           });\r\n         }\r\n         setTask(tempTaskData)\r\n         \r\n    }\r\n    getAllTask()\r\n\r\n    }, [props.data])\r\n    \r\n    async function callback(key) {\r\n            setData(task[key||0].id)\r\n      }\r\n\r\n      const handleRemove = (key) => { //deleting task\r\n        let newData = task.filter((tempData) => {\r\n          return tempData.key !== key\r\n        })\r\n        setTask(newData)\r\n      }\r\n\r\n    async function markComplete(key){\r\n        try {\r\n            let complete = task.filter(function(tasks){\r\n                return tasks.status===\"COMPLETED\"\r\n            }) \r\n            let progress = (complete.length+1)/task.length\r\n            let progressDB =  Math.floor(progress*100)\r\n            let result = await onUpdateTask({taskId: task[key||0].id, status: \"COMPLETED\", study: studyObj.STUDY.studyID, progress: progressDB, projectName: projectObj.PROJECT.projectName})\r\n            notif('info', result.data.message)\r\n            let newTask = [...task]\r\n            newTask[key]= {...newTask[key], status : \"COMPLETED\"}\r\n            setTask(newTask)\r\n            \r\n        } catch (error) {\r\n            notif('error', error)\r\n        }\r\n    }\r\n\r\n    async function deleteTask(key){\r\n        try {\r\n           let result =  await onDeleteTask({taskId: task[key||0].id, projectName: projectObj.PROJECT.projectName})\r\n           handleRemove(key)\r\n           notif('info', result.data.message)\r\n        } catch (error) {\r\n            notif('error', error)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div >\r\n            {loading ?  <div className=\"spinner\"><Spin /> </div> : task.length===0 ? <Empty/> :\r\n            <div>\r\n            <Collapse accordion onChange={callback} >\r\n                {task.map(tasks =>(<Panel header={tasks.taskTitle} key={tasks.key} extra={ tasks.status === \"SUBMITTED\" ? \r\n                    <div>\r\n                        <Popconfirm title=\"Are you sure?\" onConfirm={()=>markComplete(tasks.key)}>\r\n                            <Tooltip title=\"Click to complete task!\" placement=\"leftTop\">\r\n                            <Button disabled={tasks.status===\"COMPLETED\"? true: false} style={{background: '#A0BF85', borderRadius: '50px'}}>{tasks.status}</Button>\r\n                            </Tooltip>\r\n                        </Popconfirm>\r\n                    </div> : \r\n                    <div>\r\n                        <Button disabled={true} >{tasks.status}</Button>\r\n                        <Popconfirm title=\"Are you sure?\" onConfirm={()=>deleteTask(tasks.key)}>\r\n                        <Tooltip title=\"Click to delete task!\" placement=\"leftTop\">\r\n                            <Button danger icon={<DeleteFilled/>}></Button>\r\n                        </Tooltip>\r\n                        </Popconfirm>\r\n                    </div>\r\n                        }>\r\n                    \r\n                    <div>\r\n                        <div style={{display: 'flex', gap: '5px'}}>\r\n                            <label style={{fontWeight:'bolder'}}>Task:</label>\r\n                            <p>{tasks.taskDescription}</p>\r\n                        </div>\r\n                        <div style={{display: 'grid', margin: '0px'}}>\r\n                        <div style={{display: 'flex', gap: '5px', lineHeight:'2px'}}>\r\n                            <label style={{fontWeight:'bold'}}>Date Created:</label>\r\n                            <p>{tasks.dateCreated}</p>\r\n                        </div>\r\n                        <div style={{display: 'flex', gap: '5px', lineHeight:'2px'}}>\r\n                            <label style={{fontWeight:'bold'}}>Last Updated:</label>\r\n                            <p>{tasks.lastUpdated}</p>\r\n                        </div>\r\n                        <div style={{display: 'flex', gap: '5px',lineHeight:'2px'}}>\r\n                            <label style={{fontWeight:'bold'}}>Deadline:</label>\r\n                            <p>{tasks.deadline}</p>\r\n                        </div>\r\n                        <div style={{display: 'flex', gap: '5px',lineHeight:'2px'}}>\r\n                            <label style={{fontWeight:'bold'}}>Assignee:</label>\r\n                            <p>{tasks.assignee}</p>\r\n                        </div>\r\n                        <div style={{display: 'flex', gap: '5px', lineHeight:'2px'}}>\r\n                            <label style={{fontWeight:'bold'}}>Adviser:</label>\r\n                            <p>{tasks.createdBy}</p>\r\n                        </div>\r\n                        <div>\r\n                            <label style={{fontWeight:'bold'}}>Comments:</label>\r\n                            <AddComment data={data}/>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </Panel>))}\r\n            </Collapse></div>  }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerDisplayTask\r\n","import { Input, Button, Form, DatePicker, Space, Select, notification, Tooltip, Modal} from 'antd';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { onGetUserForTask, onTaskCreate } from '../services/taskAPI';\r\nimport { useSelector } from 'react-redux';\r\nimport ManagerDisplayTask from './ManagerDisplayTask';\r\n\r\n\r\n\r\nconst AddTask = () => {\r\n    \r\n    const projectObj = useSelector(state => state.project)\r\n    const studyObj = useSelector(state => state.study)\r\n    const userObj = useSelector(state => state.user)\r\n\r\n\r\n    const { Option } = Select;\r\n    const [task, setTask] = useState({title: \"\", description:\"\", deadline: \"\", assignee:'', projectName:  projectObj.PROJECT.projectName, studyName: studyObj.STUDY.title, user: userObj.USER.name})\r\n    const [userData, setUserData] = useState([])\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [forProps, setForProps] =useState()\r\n\r\n    const notif = (type, message) => {\r\n        notification[type]({\r\n          message: 'Notification Title',\r\n          description:\r\n            message,\r\n        });\r\n      };\r\n\r\n      const showModal = () => {\r\n        setIsModalVisible(true);\r\n      };\r\n    \r\n      const handleOk = () => {\r\n        setIsModalVisible(false);\r\n        setTask({...task, deadline: '', description: '', title: '', assignee: ''})\r\n  \r\n      };\r\n    \r\n      const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n        setTask({...task, deadline: '', description: '', title: '', assignee:''})\r\n   \r\n      };\r\n\r\n\r\n    function deadline(date) {\r\n        setTask({...task, deadline: date})\r\n    }\r\n\r\n    function assignee(value) {   //for assigning user\r\n        setTask({...task, assignee: value})\r\n    }\r\n\r\n  \r\n\r\n\r\n    useEffect(() => {\r\n        async function onGetUser(){\r\n            let resultUsers = await onGetUserForTask({study: studyObj.STUDY.title})\r\n            let x = resultUsers.data.studies[0].assignee\r\n            let tempUserData = []\r\n            for(let i = 0; i < x.length; i++){ \r\n                tempUserData.push({\r\n                    key: x[i],\r\n                    name:  x[i],\r\n                    value:  x[i],\r\n                })\r\n            }\r\n            setUserData(tempUserData)\r\n        }\r\n       onGetUser()\r\n    }, [studyObj.STUDY.title, studyObj.STUDY.studyName])\r\n\r\n    async function onSubmit(){\r\n        try {\r\n        let newTask = await onTaskCreate(task)\r\n        notif('info', newTask.data.message)\r\n        setTask({...task, title: \"\", description:\"\", deadline: \"\", assignee: ''}) \r\n        setForProps(newTask.data)\r\n        } catch (error) {\r\n            notif(\"error\",error.response.data.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ManagerDisplayTask data={forProps}/>\r\n            <Tooltip placement=\"top\" title=\"Add Task\">\r\n                <Button style={{background: '#A0BF85', borderRadius: '50%', float: 'right', height:'40px', marginTop: '10px'}} onClick={showModal}>+</Button>\r\n            </Tooltip>\r\n            <Modal title=\"Add Task\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                <Form onFinish={onSubmit}>\r\n                    <Form.Item \r\n                        rules={[\r\n                            {\r\n                            required: true,\r\n                            message: 'Task Title is required.',\r\n                            },\r\n                        ]}>\r\n                            <Input placeholder=\"Enter Task Title\" onChange={e => setTask({...task, title: e.target.value})} value={task.title}></Input>\r\n                    </Form.Item>\r\n                    <Form.Item  \r\n                        rules={[\r\n                            {\r\n                            required: true,\r\n                            message: 'Task description is required.',\r\n                            },\r\n                        ]}>\r\n                            <Input placeholder=\"Enter Task Description\" onChange={e => setTask({...task, description: e.target.value})} value={task.description}></Input>\r\n                    </Form.Item>\r\n                    <Form.Item \r\n                                rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input deadline of task!',\r\n                                },\r\n                                ]}>\r\n                            <label>Deadline</label>\r\n                            <Space direction=\"vertical\">\r\n                            <DatePicker onChange={deadline}/>\r\n                            </Space>\r\n                    </Form.Item>\r\n                    <Form.Item \r\n                                rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please assign task!',\r\n                                },\r\n                                ]}>\r\n                            <Select mode=\"tags\" style={{ width: '100%' }}  onChange={assignee} tokenSeparators={[',']} placeholder=\"Assign Study\">\r\n                            {userData.map(user => (\r\n                                <Option key={user.key} value={user.value}>{user.name}</Option>\r\n                            ))}\r\n                            </Select>\r\n                    </Form.Item>\r\n                    <Button htmlType=\"submit\" style={{background: \"#A0BF85\", borderRadius: \"5px\"}}>CREATE TASK</Button>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import React, {useEffect, useState} from 'react'\r\nimport {Button, Collapse, Spin, Empty, Popconfirm, notification } from 'antd'\r\nimport { onGetAllTask,  onUpdateTaskUser } from '../services/taskAPI';\r\nimport { useSelector} from 'react-redux';\r\nimport moment from 'moment';\r\nimport AddComment from './AddComment';\r\nimport '../styles/CSS/Userdash.css'\r\nimport AddTask from './AddTask';\r\n\r\n\r\nconst { Panel } = Collapse;\r\nconst DisplayTasks = () => {\r\n    const studyObj = useSelector(state => state.study)\r\n    const userObj = useSelector(state => state.user)\r\n\r\n    const [task , setTask] = useState([])\r\n    const [loading, setloading] = useState(false)\r\n\r\n    const [data, setData] = useState({task: '', length: 3})\r\n    \r\n    const notif = (type, message) => {\r\n        notification[type]({\r\n          message: 'Notification Title',\r\n          description:\r\n            message,\r\n        });\r\n      };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        async function getAllTask (){\r\n            const forBackend = {\r\n                studyName: studyObj.STUDY.title,\r\n                assignee: userObj.USER.name\r\n            }        \r\n            setloading(true)\r\n            let resultTask = await onGetAllTask(forBackend)\r\n            let loopTask = resultTask.data.tasks\r\n            let tempTaskData = []\r\n             for(let i = 0; i < loopTask.length; i++){ \r\n               tempTaskData.push({\r\n                 key: [i],\r\n                 id: loopTask[i]._id,\r\n                 createdBy: loopTask[i].createdBy,\r\n                 dateCreated: moment(loopTask[i].dateCreated).format('MM-DD-YYYY HH:MM:SS'),\r\n                 lastUpdated: moment(loopTask[i].lastUpdated).format('MM-DD-YYYY HH:MM:SS'),\r\n                 deadline: moment(loopTask[i].deadline).format('MM-DD-YYYY HH:MM:SS'),\r\n                 taskTitle: loopTask[i].tasksTitle,\r\n                 taskDescription: loopTask[i].tasksDescription,\r\n                 assignee: [loopTask[i].assignee],\r\n                 status: loopTask[i].status\r\n               });\r\n             }\r\n             setTask(tempTaskData)\r\n             setloading(false)\r\n        }\r\n        getAllTask()\r\n    }, [studyObj.STUDY.title, userObj.USER.name])\r\n\r\n    async function callback(key) {\r\n            setData(task[key||0].id)\r\n      }\r\n\r\n      async function markComplete(key){\r\n        try {\r\n          let result =  await onUpdateTaskUser({taskId: task[key||0].id, status: \"SUBMITTED\"})\r\n            notif('info', result.data.message)\r\n            let newTask = [...task]\r\n            newTask[key]= {...newTask[key], status : \"SUBMITTED\"}\r\n            setTask(newTask) \r\n        } catch (error) {\r\n            notif('error', error)\r\n        }\r\n    }\r\n\r\nreturn (\r\n    <div>\r\n        {userObj.USER.category === \"manager\" ? <AddTask/> : \r\n        <div >\r\n            {loading?  <div className=\"spinner\"><Spin /> </div> : task.length===0 ? <Empty/> :\r\n            <div>\r\n            <Collapse accordion onChange={callback} >\r\n                {task.map(tasks =>(<Panel header={tasks.taskTitle} key={tasks.key} extra={tasks.status === \"ONGOING\" ? <div><Popconfirm placement=\"leftTop\" title=\"Continue to submit?\" onConfirm={()=>markComplete(tasks.key)}>\r\n                    <Button disabled={tasks.status===\"SUBMITTED\" ? true: false} style={{background: '#A0BF85', borderRadius: '50px'}}>{tasks.status === \"ONGOING\"? \"Submit\" : \"SUBMITTED\"}</Button>\r\n                    </Popconfirm></div> : \r\n                    <Button disabled={true} style={{background: '#A0BF85', borderRadius: '50px'}}>{tasks.status}</Button>}>\r\n                    <div>\r\n                        <div style={{display: 'flex', gap: '5px'}}>\r\n                            <label style={{fontWeight:'bolder'}}>Task:</label>\r\n                            <p>{tasks.taskDescription}</p>\r\n                        </div>\r\n                        <div style={{display: 'grid', margin: '0px'}}>\r\n                        <div style={{display: 'flex', gap: '5px', lineHeight:'2px'}}>\r\n                            <label style={{fontWeight:'bold'}}>Date Created:</label>\r\n                            <p>{tasks.dateCreated}</p>\r\n                        </div>\r\n                        <div style={{display: 'flex', gap: '5px', lineHeight:'2px'}}>\r\n                            <label style={{fontWeight:'bold'}}>Last Updated:</label>\r\n                            <p>{tasks.lastUpdated}</p>\r\n                        </div>\r\n                        <div style={{display: 'flex', gap: '5px',lineHeight:'2px'}}>\r\n                            <label style={{fontWeight:'bold'}}>Deadline:</label>\r\n                            <p>{tasks.deadline}</p>\r\n                        </div>\r\n                        <div style={{display: 'flex', gap: '5px',lineHeight:'2px'}}>\r\n                            <label style={{fontWeight:'bold'}}>Assignee:</label>\r\n                            <p>{tasks.assignee}</p> \r\n                        </div>\r\n                        <div style={{display: 'flex', gap: '5px', lineHeight:'2px'}}>\r\n                            <label style={{fontWeight:'bold'}}>Adviser:</label>\r\n                            <p>{tasks.createdBy}</p>\r\n                        </div>\r\n                        <div>\r\n                            <label style={{fontWeight:'bold'}}>Comments:</label>\r\n                            <AddComment data={data}/>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </Panel>))}\r\n            </Collapse></div>  }\r\n        </div>}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default DisplayTasks\r\n","\r\nimport React, { useState , useEffect} from \"react\";\r\nimport { Button, Spin, notification } from \"antd\";\r\nimport { useSelector } from 'react-redux';\r\nimport { onGetDocumentation, onUpdateIntroduction } from \"../services/studyAPI\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport { EditorState, convertToRaw, convertFromRaw} from \"draft-js\";\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport '../styles/CSS/Userdash.css'\r\n\r\n\r\n\r\nconst Introduction = () => {\r\n    const studyObj = useSelector(state => state.study) //study reducer\r\n    const userObj = useSelector(state => state.user)\r\n    const AUTOSAVE_INTERVAL = 10000;\r\n    const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\n    const [editorState, setEditorState] = useState(EditorState.createEmpty())\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const content = editorState.getCurrentContent(); \r\n    const dataToSaveBackend = JSON.stringify(convertToRaw(content))\r\n    const markup = draftToHtml(convertToRaw(content))\r\n    \r\n    const notif = (type, message) => {\r\n      notification[type]({\r\n        message: 'Notification',\r\n        description:\r\n          message,\r\n      });\r\n    };\r\n\r\n    async function download(){\r\n       try {\r\n        var header = \"<html xmlns:o='urn:schemas-microsoft-com:office:office' \"+\r\n            \"xmlns:w='urn:schemas-microsoft-com:office:word' \"+\r\n            \"xmlns='http://www.w3.org/TR/REC-html40'>\"+\r\n            \"<head><meta charset='utf-8'><title>Export HTML to Word Document with JavaScript</title></head><body>\";\r\n       var footer = \"</body></html>\";\r\n       var sourceHTML = header+markup+footer;\r\n       \r\n       var source = 'data:application/vnd.ms-word;charset=utf-8,' + encodeURIComponent(sourceHTML);\r\n       var fileDownload = document.createElement(\"a\");\r\n       document.body.appendChild(fileDownload);\r\n       fileDownload.href = source;\r\n       fileDownload.download = `${studyObj.STUDY.title}Introduction.doc`;\r\n       fileDownload.click();\r\n       document.body.removeChild(fileDownload);\r\n       notif('success', \"Download Successful!\")\r\n       } catch (error) {\r\n           notif('error', \"Download Failed!\")\r\n       }\r\n    }\r\n\r\n    async function updateDB(){\r\n      try {\r\n          await onUpdateIntroduction({studyID: studyObj.STUDY.studyID, introduction: dataToSaveBackend, user: userObj.USER.name})\r\n          notif('success', \"Document Updated!\")\r\n      } catch (error) {\r\n          notif('error', 'Error in saving document!')\r\n      }\r\n  }\r\n    useEffect(() => {\r\n        const timer = setTimeout(()=>{\r\n          updateDB()\r\n        \r\n        }, AUTOSAVE_INTERVAL)\r\n        return () => clearTimeout(timer);\r\n      }, [editorState])\r\n\r\n      useEffect(() => {\r\n        async function getDataFromDB(){\r\n          try {\r\n            setLoading(true)\r\n              let result = await onGetDocumentation({studyID: studyObj.STUDY.studyID})\r\n              setLoading(false)\r\n              const contentState = convertFromRaw(JSON.parse(result.data.docs.introduction)); //displaying data\r\n              setEditorState(EditorState.createWithContent(contentState))\r\n              \r\n          } catch (error) {\r\n              notif('error', 'Error in displaying data!')\r\n          }\r\n      }\r\n        getDataFromDB()\r\n      }, [studyObj.STUDY.studyID])\r\n\r\n      const onEditorStateChange = (editorState) =>{\r\n        setEditorState(editorState)\r\n      }\r\n\r\n      function uploadImageCallBack(file) { \r\n        return new Promise(\r\n          (resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open('POST', '/v1/upload/documentation'); \r\n            const data = new FormData();\r\n            data.append('file', file);\r\n            xhr.send(data);\r\n            xhr.addEventListener('load', () => {\r\n              const response = JSON.parse(xhr.responseText);\r\n              resolve({data: {link: `/documentation/${response.filename}`}})\r\n            });\r\n            xhr.addEventListener('error', () => {\r\n              const error = JSON.parse(xhr.responseText);\r\n              reject(error);\r\n            });\r\n          }\r\n        );\r\n      }\r\n\r\n    return (\r\n      <div>\r\n        {loading? <Spin indicator={antIcon} className=\"spinner\" /> :\r\n      \r\n        <div style={{justifyContent:'space-between', flexDirection:'column', display:'flex'}}>\r\n            <div style={{lineHeight: '20px'}}>\r\n                <Editor editorState={editorState}\r\n                     toolbarClassName=\"toolbarClassName\"\r\n                     wrapperClassName=\"wrapperClassName\"\r\n                     editorClassName=\"editorClassName\"\r\n                     toolbar={{\r\n                        inline: { inDropdown: true },\r\n                        list: { inDropdown: true },\r\n                        textAlign: { inDropdown: true },\r\n                        link: { inDropdown: true },\r\n                        history: { inDropdown: true },\r\n                        image: { uploadCallback: uploadImageCallBack, alt: { present: true, mandatory: true }, previewImage: true }\r\n                      }}\r\n                    onEditorStateChange={onEditorStateChange}\r\n                />\r\n            </div>\r\n            <div style={{display:'flex', justifyContent:'flex-end', lineHeight: '20px', gap:'5px'}}>\r\n            <Button type='primary' onClick={updateDB}>Save</Button>\r\n            <Button type='primary' onClick={download}>Download</Button>\r\n            </div>\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Introduction\r\n","\r\nimport React, { useState , useEffect} from \"react\";\r\nimport { Button, Spin, notification } from \"antd\";\r\nimport { useSelector } from 'react-redux';\r\nimport { onGetDocumentation, onUpdateMethodology } from \"../services/studyAPI\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport { EditorState, convertToRaw, convertFromRaw} from \"draft-js\";\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport '../styles/CSS/Userdash.css'\r\n\r\nconst Methodology = () => {\r\n    const studyObj = useSelector(state => state.study) //study reducer\r\n    const userObj = useSelector(state => state.user)\r\n    const AUTOSAVE_INTERVAL = 3000;\r\n    const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\n    const [editorState, setEditorState] = useState(EditorState.createEmpty())\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const content = editorState.getCurrentContent(); \r\n    const dataToSaveBackend = JSON.stringify(convertToRaw(content))\r\n    const markup = draftToHtml(convertToRaw(content))\r\n\r\n    const notif = (type, message) => {\r\n      notification[type]({\r\n        message: 'Notification',\r\n        description:\r\n          message,\r\n      });\r\n    };\r\n\r\n    async function download(){\r\n        try {\r\n         var header = \"<html xmlns:o='urn:schemas-microsoft-com:office:office' \"+\r\n             \"xmlns:w='urn:schemas-microsoft-com:office:word' \"+\r\n             \"xmlns='http://www.w3.org/TR/REC-html40'>\"+\r\n             \"<head><meta charset='utf-8'><title>Export HTML to Word Document with JavaScript</title></head><body>\";\r\n        var footer = \"</body></html>\";\r\n        var sourceHTML = header+markup+footer;\r\n        \r\n        var source = 'data:application/vnd.ms-word;charset=utf-8,' + encodeURIComponent(sourceHTML);\r\n        var fileDownload = document.createElement(\"a\");\r\n        document.body.appendChild(fileDownload);\r\n        fileDownload.href = source;\r\n        fileDownload.download = `${studyObj.STUDY.title}Methodology.doc`;\r\n        fileDownload.click();\r\n        document.body.removeChild(fileDownload);\r\n        notif('success', 'Download sucessful!')\r\n        } catch (error) {\r\n            notif('error', 'Download Failed!')\r\n        }\r\n     }\r\n\r\n     function uploadImageCallBack(file) { \r\n        return new Promise(\r\n          (resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open('POST', '/v1/upload/documentation'); \r\n            const data = new FormData();\r\n            data.append('file', file);\r\n            xhr.send(data);\r\n            xhr.addEventListener('load', () => {\r\n              const response = JSON.parse(xhr.responseText);\r\n              resolve({data: {link: `/documentation/${response.filename}`}})\r\n            });\r\n            xhr.addEventListener('error', () => {\r\n              const error = JSON.parse(xhr.responseText);\r\n              reject(error);\r\n            });\r\n          }\r\n        );\r\n      }\r\n\r\n      async function updateDB(){\r\n        try {\r\n            await onUpdateMethodology({studyID: studyObj.STUDY.studyID, methodology: dataToSaveBackend, user: userObj.USER.name})\r\n            notif('success', \"Document updated!\")\r\n        } catch (error) {\r\n            notif('error', \"Error in saving document!\")\r\n        }\r\n      }\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(()=>{\r\n          updateDB()\r\n        }, AUTOSAVE_INTERVAL)\r\n        return () => clearTimeout(timer);\r\n      }, [editorState, studyObj.STUDY.studyID, dataToSaveBackend,  userObj.USER.name ])\r\n\r\n      useEffect(() => {\r\n        async function getDataFromDB(){\r\n          try {\r\n            setLoading(true)\r\n              let result = await onGetDocumentation({studyID: studyObj.STUDY.studyID})\r\n              setLoading(false)\r\n              const contentState = convertFromRaw(JSON.parse(result.data.docs.methodology)); //displaying data\r\n              setEditorState(EditorState.createWithContent(contentState))\r\n             \r\n          } catch (error) {\r\n              notif('error', \"Error in displaying data!\")\r\n          }\r\n      }\r\n        getDataFromDB()\r\n      }, [studyObj.STUDY.studyID])\r\n\r\n      const onEditorStateChange = (editorState) =>{\r\n        setEditorState(editorState)\r\n      }\r\n    return (\r\n      <div>\r\n        {loading? <Spin indicator={antIcon} className=\"spinner\" /> :\r\n        <div style={{justifyContent:'space-between', flexDirection:'column', display:'flex'}}>\r\n            <div style={{lineHeight: '20px'}}>\r\n                <Editor editorState={editorState}\r\n                toolbarClassName=\"toolbarClassName\"\r\n                wrapperClassName=\"wrapperClassName\"\r\n                editorClassName=\"editorClassName\"\r\n                toolbar={{\r\n                   inline: { inDropdown: true },\r\n                   list: { inDropdown: true },\r\n                   textAlign: { inDropdown: true },\r\n                   link: { inDropdown: true },\r\n                   history: { inDropdown: true },\r\n                   image: { uploadCallback: uploadImageCallBack, alt: { present: true, mandatory: true }, previewImage: true }\r\n                 }}\r\n                    onEditorStateChange={onEditorStateChange}\r\n                />\r\n            </div>\r\n            <div style={{display:'flex', justifyContent:'flex-end', lineHeight: '20px', gap:'5px'}}>\r\n            <Button type='primary' onClick={updateDB}>Save</Button>\r\n            <Button type='primary' onClick={download}>Download</Button>\r\n            </div>\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Methodology\r\n","\r\nimport React, { useState , useEffect} from \"react\";\r\nimport { Button, Spin, notification } from \"antd\";\r\nimport { useSelector } from 'react-redux';\r\nimport { onGetDocumentation, onUpdateResultsAndDiscussion } from \"../services/studyAPI\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport { EditorState, convertToRaw, convertFromRaw} from \"draft-js\";\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport '../styles/CSS/Userdash.css'\r\n\r\n\r\nconst ResultsAndDiscussion = () => {\r\n    const studyObj = useSelector(state => state.study) //study reducer\r\n    const userObj = useSelector(state => state.user)\r\n    const AUTOSAVE_INTERVAL = 3000;\r\n    const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\n    const [editorState, setEditorState] = useState(EditorState.createEmpty())\r\n    const[loading, setLoading] = useState(false)\r\n\r\n    const content = editorState.getCurrentContent(); \r\n    const dataToSaveBackend = JSON.stringify(convertToRaw(content))\r\n    const markup = draftToHtml(convertToRaw(content))\r\n\r\n    const notif = (type, message) => {\r\n      notification[type]({\r\n        message: 'Notification',\r\n        description:\r\n          message,\r\n      });\r\n    };\r\n\r\n    async function download(){\r\n        try {\r\n         var header = \"<html xmlns:o='urn:schemas-microsoft-com:office:office' \"+\r\n             \"xmlns:w='urn:schemas-microsoft-com:office:word' \"+\r\n             \"xmlns='http://www.w3.org/TR/REC-html40'>\"+\r\n             \"<head><meta charset='utf-8'><title>Export HTML to Word Document with JavaScript</title></head><body>\";\r\n        var footer = \"</body></html>\";\r\n        var sourceHTML = header+markup+footer;\r\n        \r\n        var source = 'data:application/vnd.ms-word;charset=utf-8,' + encodeURIComponent(sourceHTML);\r\n        var fileDownload = document.createElement(\"a\");\r\n        document.body.appendChild(fileDownload);\r\n        fileDownload.href = source;\r\n        fileDownload.download = `${studyObj.STUDY.title}Results.doc`;\r\n        fileDownload.click();\r\n        document.body.removeChild(fileDownload);\r\n        notif('success', 'Download successful!')\r\n        } catch (error) {\r\n            notif('error', 'Download error!')\r\n        }\r\n     }\r\n\r\n     function uploadImageCallBack(file) { \r\n        return new Promise(\r\n          (resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open('POST', '/v1/upload/documentation'); \r\n            const data = new FormData();\r\n            data.append('file', file);\r\n            xhr.send(data);\r\n            xhr.addEventListener('load', () => {\r\n              const response = JSON.parse(xhr.responseText);\r\n              resolve({data: {link: `/documentation/${response.filename}`}})  \r\n            });\r\n            xhr.addEventListener('error', () => {\r\n              const error = JSON.parse(xhr.responseText);\r\n              reject(error);\r\n            });\r\n          }\r\n        );\r\n      }\r\n\r\n    async function updateDB(){\r\n        try {\r\n            await onUpdateResultsAndDiscussion({studyID: studyObj.STUDY.studyID, resultsAndDiscussion: dataToSaveBackend, user: userObj.USER.name})\r\n            notif('success', \"Document Updated!\")\r\n        } catch (error) {\r\n            notif('error', \"Error in saving document!\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(()=>{\r\n        updateDB()\r\n        }, AUTOSAVE_INTERVAL)\r\n        return () => clearTimeout(timer);\r\n      }, [editorState ])\r\n\r\n      useEffect(() => {\r\n        async function getDataFromDB(){\r\n          try {\r\n            setLoading(true)\r\n              let result = await onGetDocumentation({studyID: studyObj.STUDY.studyID})\r\n              setLoading(false)\r\n              const contentState = convertFromRaw(JSON.parse(result.data.docs.resultsAndDiscussion)); //displaying data\r\n              setEditorState(EditorState.createWithContent(contentState))\r\n              \r\n          } catch (error) {\r\n              notif('error', 'Error in displaying data!')\r\n          }\r\n      }\r\n      getDataFromDB()\r\n      }, [studyObj.STUDY.studyID])\r\n\r\n      const onEditorStateChange = (editorState) =>{\r\n        setEditorState(editorState)\r\n      }\r\n    return (\r\n      <div>{loading ? <Spin indicator={antIcon} className=\"spinner\" /> : \r\n        <div style={{justifyContent:'space-between', flexDirection:'column', display:'flex'}}>\r\n            <div style={{lineHeight: '20px'}}>\r\n                <Editor editorState={editorState}\r\n                toolbarClassName=\"toolbarClassName\"\r\n                wrapperClassName=\"wrapperClassName\"\r\n                editorClassName=\"editorClassName\"\r\n                toolbar={{\r\n                   inline: { inDropdown: true },\r\n                   list: { inDropdown: true },\r\n                   textAlign: { inDropdown: true },\r\n                   link: { inDropdown: true },\r\n                   history: { inDropdown: true },\r\n                   image: { uploadCallback: uploadImageCallBack, alt: { present: true, mandatory: true }, previewImage: true }\r\n                 }}\r\n                    onEditorStateChange={onEditorStateChange}\r\n                />\r\n            </div>\r\n            <div style={{display:'flex', justifyContent:'flex-end', lineHeight: '20px', gap:'5px'}}>\r\n            <Button type='primary' onClick={updateDB}>Save</Button>\r\n            <Button type='primary' onClick={download}>Download</Button>\r\n            </div>\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultsAndDiscussion\r\n","\r\nimport React, { useState , useEffect} from \"react\";\r\nimport { Button, Spin, notification } from \"antd\";\r\nimport { useSelector } from 'react-redux';\r\nimport { onGetDocumentation, onUpdateConclusion } from \"../services/studyAPI\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport { EditorState, convertToRaw, convertFromRaw} from \"draft-js\";\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport '../styles/CSS/Userdash.css'\r\n\r\n\r\nconst Conclusion = () => {\r\n    const studyObj = useSelector(state => state.study) //study reducer\r\n    const userObj = useSelector(state => state.user)\r\n    const AUTOSAVE_INTERVAL = 3000;\r\n    const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\n    const [editorState, setEditorState] = useState(EditorState.createEmpty())\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const content = editorState.getCurrentContent(); \r\n    const dataToSaveBackend = JSON.stringify(convertToRaw(content))\r\n    const markup = draftToHtml(convertToRaw(content))\r\n\r\n    const notif = (type, message) => {\r\n      notification[type]({\r\n        message: 'Notification',\r\n        description:\r\n          message,\r\n      });\r\n    };\r\n\r\n    async function download(){\r\n        try {\r\n         var header = \"<html xmlns:o='urn:schemas-microsoft-com:office:office' \"+\r\n             \"xmlns:w='urn:schemas-microsoft-com:office:word' \"+\r\n             \"xmlns='http://www.w3.org/TR/REC-html40'>\"+\r\n             \"<head><meta charset='utf-8'><title>Export HTML to Word Document with JavaScript</title></head><body>\";\r\n        var footer = \"</body></html>\";\r\n        var sourceHTML = header+markup+footer;\r\n        \r\n        var source = 'data:application/vnd.ms-word;charset=utf-8,' + encodeURIComponent(sourceHTML);\r\n        var fileDownload = document.createElement(\"a\");\r\n        document.body.appendChild(fileDownload);\r\n        fileDownload.href = source;\r\n        fileDownload.download = `${studyObj.STUDY.title}Conclusion.doc`;\r\n        fileDownload.click();\r\n        document.body.removeChild(fileDownload);\r\n        notif('success', 'Download successful!')\r\n        } catch (error) {\r\n            notif('error', 'Download Failed!')\r\n        }\r\n     }\r\n\r\n     function uploadImageCallBack(file) { \r\n        return new Promise(\r\n          (resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open('POST', '/v1/upload/documentation'); \r\n            const data = new FormData();\r\n            data.append('file', file);\r\n            xhr.send(data);\r\n            xhr.addEventListener('load', () => {\r\n              const response = JSON.parse(xhr.responseText);\r\n              resolve({data: {link: `/documentation/${response.filename}`}})\r\n            });\r\n            xhr.addEventListener('error', () => {\r\n              const error = JSON.parse(xhr.responseText);\r\n              reject(error);\r\n            });\r\n          }\r\n        );\r\n      }\r\n\r\n      async function updateDB(){\r\n        try {\r\n            await onUpdateConclusion({studyID: studyObj.STUDY.studyID, conclusion: dataToSaveBackend, user: userObj.USER.name})\r\n            notif('success', 'Document Updated!')\r\n        } catch (error) {\r\n            notif('error', 'Error in updating document!')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(()=>{\r\n          updateDB()\r\n        }, AUTOSAVE_INTERVAL)\r\n        return () => clearTimeout(timer);\r\n      }, [editorState])\r\n\r\n      useEffect(() => {\r\n        async function getDataFromDB(){\r\n          try {\r\n            setLoading(true)\r\n              let result = await onGetDocumentation({studyID: studyObj.STUDY.studyID})\r\n              setLoading(false)\r\n              const contentState = convertFromRaw(JSON.parse(result.data.docs.conclusion)); //displaying data\r\n              setEditorState(EditorState.createWithContent(contentState))\r\n              \r\n          } catch (error) {\r\n              notif('error', 'Error in displaying data!')\r\n          }\r\n      }\r\n        getDataFromDB()\r\n      }, [studyObj.STUDY.studyID])\r\n\r\n      const onEditorStateChange = (editorState) =>{\r\n        setEditorState(editorState)\r\n      }\r\n    return (\r\n      <div>\r\n        {loading? <Spin indicator={antIcon} className=\"spinner\" /> : \r\n        <div style={{justifyContent:'space-between', flexDirection:'column', display:'flex'}}>\r\n            <div style={{lineHeight: '20px'}}>\r\n                <Editor editorState={editorState}\r\n                toolbarClassName=\"toolbarClassName\"\r\n                wrapperClassName=\"wrapperClassName\"\r\n                editorClassName=\"editorClassName\"\r\n                toolbar={{\r\n                   inline: { inDropdown: true },\r\n                   list: { inDropdown: true },\r\n                   textAlign: { inDropdown: true },\r\n                   link: { inDropdown: true },\r\n                   history: { inDropdown: true },\r\n                   image: { uploadCallback: uploadImageCallBack, alt: { present: true, mandatory: true }, previewImage: true }\r\n                 }}\r\n                    onEditorStateChange={onEditorStateChange}\r\n                />\r\n            </div>\r\n            <div style={{display:'flex', justifyContent:'flex-end', lineHeight: '20px', gap:'5px'}}>\r\n            <Button type='primary' onClick={updateDB}>Save</Button>\r\n            <Button type='primary' onClick={download}>Download</Button>\r\n            </div>\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Conclusion\r\n","import React, {useState, useRef, useEffect} from 'react'\r\nimport {Editor, EditorState} from 'draft-js';\r\nimport { useSelector } from 'react-redux';\r\nimport { onGetStudyForDoc, onUpdateSummary } from '../services/studyAPI';\r\nimport moment from 'moment';\r\nimport { Button, Spin, Input, notification } from 'antd';\r\nimport { convertToRaw, convertFromRaw } from 'draft-js';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport '../styles/CSS/Userdash.css'\r\n\r\nconst Summary = () => {\r\n    const [editorState, setEditorState] = useState(EditorState.createEmpty())\r\n    const editor= useRef(null)\r\n    const [study, setStudy] = useState({})\r\n    const [assignees, setAssignees] = useState([])\r\n    const [update, setUpdate] = useState(true)\r\n    const [updateTitleandBudget, setUpdateTitleandBudget] = useState(true)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const studyObj = useSelector(state => state.study) //study reducer\r\n    const userObj = useSelector(state => state.user) //study reducer\r\n    const content = editorState.getCurrentContent(); \r\n    const dataToSaveBackend = JSON.stringify(convertToRaw(content))\r\n    const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\n    const notif = (type, message) => {\r\n        notification[type]({\r\n          message: 'Notification',\r\n          description:\r\n            message,\r\n        });\r\n      };\r\n    \r\n    function focusEditor() {\r\n        editor.current.focus();\r\n    }\r\n\r\n    async function updateSummary(){\r\n        try {\r\n            await onUpdateSummary({studyID: studyObj.STUDY.studyID, summary: dataToSaveBackend, user: userObj.USER.name, title: study.studyTitle, budget: study.budget})\r\n            setUpdate(true)\r\n            setUpdateTitleandBudget(true)\r\n            notif('success', 'Document updated!')\r\n        } catch (error) {\r\n            notif('error', 'Error in updating document!')\r\n        }\r\n    }\r\n\r\n    function onUpdate(){\r\n        setUpdate(false)\r\n       if( userObj.USER.category === \"user\") {\r\n           setUpdateTitleandBudget(true)} \r\n       else{\r\n        setUpdateTitleandBudget(false)\r\n    }}\r\n\r\n      useEffect(() => {\r\n        async function getStudyData(){\r\n            try {\r\n                setLoading(true)\r\n                let result = await onGetStudyForDoc({studyID: studyObj.STUDY.studyID})\r\n                setLoading(false)\r\n                setStudy(result.data.study[0]) //study data\r\n                    let xAssignee = [result.data.study[0].assignee] //for displaying assignee\r\n                    let tempAssignee = []\r\n                for (let i = 0; i < xAssignee.length; i++) {\r\n                    tempAssignee.push({\r\n                        assignee:  xAssignee[i]\r\n                    })\r\n                }\r\n                setAssignees(tempAssignee) \r\n                const contentState = convertFromRaw(JSON.parse(result.data.study[0].summary)); //displaying summary\r\n                setEditorState(EditorState.createWithContent(contentState))\r\n                \r\n            } catch (error) {\r\n               // notif('error', 'Error in getting data!')\r\n            }\r\n        }\r\n\r\n          getStudyData()\r\n      }, [studyObj.STUDY.studyID])\r\n\r\n    return (\r\n        <div>\r\n            {loading? <Spin indicator={antIcon} className='spinner' /> : \r\n            <div>\r\n            <div className=\"div-flex\">\r\n                <label style={{fontWeight:'bolder', marginTop: '4px'}}>Title: </label>\r\n                <Input bordered={false} disabled={ updateTitleandBudget} value={study.studyTitle} onChange={e => setStudy({...study, studyTitle: e.target.value})}/>\r\n            </div>\r\n            <div style={{display: 'inline-grid', left:'0px'}}>\r\n                <label style={{fontWeight:'bolder'}}>Summary:</label>\r\n                <div onClick={focusEditor}>\r\n                    <Editor\r\n                        readOnly={update}\r\n                        ref={editor}\r\n                        editorState={editorState}\r\n                        onChange={editorState => setEditorState(editorState)}\r\n                     />\r\n                </div>\r\n            </div>\r\n            <div className=\"div-flex\">\r\n                <label style={{fontWeight:'bolder', marginTop: '4px'}}>Budget: </label>\r\n                <Input bordered={false} disabled={updateTitleandBudget} value={study.budget} onChange={e => setStudy({...study, budget: e.target.value})}/>\r\n            </div>\r\n            <div className=\"div-flex\">\r\n                <label style={{fontWeight:'bolder'}}>Duration: </label>\r\n                <p>{moment(study.dateCreated).format(\"MM-DD-YYYY\")} to {moment(study.deadline).format(\"MM-DD-YYYY\")}</p>\r\n            </div>\r\n            <div className=\"div-flex\">\r\n                <label style={{fontWeight:'bolder'}}>Person Involved: </label>\r\n                {assignees.map( assign => (<p>{assign.assignee}</p>))}\r\n            </div>\r\n            <div style={{display:'flex', justifyContent:'flex-end', lineHeight: '20px', gap:'5px'}}>\r\n                <Button type='primary' onClick={updateSummary}>Save</Button>\r\n                <Button type='primary' onClick={onUpdate}>Update</Button>\r\n            </div> </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Summary\r\n","import React from 'react'\r\nimport { Tabs } from 'antd';\r\nimport Introduction from './Introduction';\r\nimport Methodology from './Methodology';\r\nimport ResultsAndDiscussion from './ResultsAndDiscussion';\r\nimport Conclusion from './Conclusion';\r\nimport '../styles/CSS/Documentation.css'\r\nimport Summary from './Summary'\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst Documentation = () => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <Tabs type=\"card\">\r\n                <TabPane tab=\"Summary\" key=\"1\">\r\n                    <Summary/>\r\n                </TabPane>\r\n                <TabPane tab=\"Introduction\" key=\"2\">\r\n                    <Introduction/>\r\n                </TabPane>\r\n                <TabPane tab=\"Methodology\" key=\"3\">\r\n                    <Methodology />\r\n                </TabPane>\r\n                <TabPane tab=\"Results and Discussion\" key=\"4\">\r\n                   <ResultsAndDiscussion/>\r\n                </TabPane>\r\n                <TabPane tab=\"Conclusion\" key=\"5\">\r\n                    <Conclusion/>\r\n                </TabPane>\r\n            </Tabs>\r\n  </div>\r\n    )\r\n}\r\n\r\nexport default Documentation\r\n","import React from 'react';\r\nimport Label from './Label'\r\nimport DataGrid from './DataGrid'\r\nimport { Layout, Typography} from 'antd'\r\nimport Sidebar from '../components/components/Sidebar'\r\nimport Headers from '../components/components/Header'\r\nimport Tasks from './DisplayTasks'\r\nimport Documentation from './Documentation'\r\nimport MobileHeader from '../components/components/MobileHeader';\r\nimport '../styles/CSS/Userdash.css'\r\nimport ManagerHeaderMobile from '../components/components/ManagerHeaderMobile';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n\r\nconst { Title } = Typography;\r\n\r\nconst StudyDash_Mobile = () => {\r\n    const { Header, Content, Sider } = Layout;\r\n\r\n    const userObj = useSelector(state => state.user)\r\n\r\n    return (\r\n        <div className=\"mobile-study-dash\">\r\n            <Layout>\r\n            <Sider className='sidebar' >\r\n                    <Sidebar/>\r\n                </Sider>\r\n               <Layout >\r\n                <Header className=\"header\"  >\r\n                        <Headers/>\r\n                </Header>\r\n                <div className=\"mobile-header\">\r\n                {userObj.USER.category === \"user\" ? <MobileHeader/> : <ManagerHeaderMobile/>}\r\n                </div>\r\n                    <Content style={{minWidth: '100vh', background: '#f2f2f2',marginLeft:'5px', minHeight: '100vh'}}>\r\n                        <Label/>\r\n                        <div style={{marginTop: '5px'}}>\r\n                            <Documentation/>\r\n                            <Title level={2}>Tasks</Title>\r\n                            <Tasks/>\r\n                            <DataGrid/>\r\n                        </div>\r\n                    </Content>\r\n               </Layout>\r\n            </Layout>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudyDash_Mobile\r\n","import React from 'react';\r\nimport Label from './Label'\r\nimport DataGrid from './DataGrid'\r\nimport { Layout, Row,Col, Typography} from 'antd'\r\nimport Sidebar from '../components/components/Sidebar'\r\nimport SidebarManager from '../components/components/ManagerSidebar'\r\nimport Headers from '../components/components/Header'\r\nimport Tasks from './DisplayTasks'\r\nimport Documentation from './Documentation'\r\nimport MobileHeader from '../components/components/MobileHeader';\r\nimport ManagerHeaderMobile from '../components/components/ManagerHeaderMobile';\r\nimport '../styles/CSS/Userdash.css'\r\nimport Mobiledash from './StudyDash_mobile';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst { Title } = Typography;\r\n\r\nconst StudyDash = () => {\r\n    const { Header, Content, Sider } = Layout;\r\n    const userObj = useSelector(state => state.user)\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"study-dash\">\r\n            <Layout>\r\n            <Sider className='sidebar' >\r\n                    {userObj.USER.category === \"user\"? <Sidebar/> : <SidebarManager/>}\r\n                </Sider>\r\n               <Layout >\r\n                <Header className=\"header\" style={{ padding: 0, background:'#f2f2f2' }} >\r\n                        <Headers/>\r\n                </Header>\r\n                <div className=\"mobile-header\">\r\n                    {userObj.USER.category === \"user\" ? <MobileHeader/> : <ManagerHeaderMobile/>}\r\n                </div>\r\n                    <Content style={{ margin: '24px 16px 0' , minHeight: \"100vh\"}}>\r\n                        <Label/>\r\n                        <Row gutter={16}>\r\n                            <Col span={12} style={{overflowY: 'scroll'}}><Documentation/></Col>\r\n                            <Col span={12} style={{overflowY: 'scroll', height: '740px'}}>\r\n                                <Title level={2}>Tasks</Title>\r\n                                 <Tasks/>\r\n                            </Col>\r\n                        </Row>\r\n                        <DataGrid/>\r\n                    </Content>\r\n               </Layout>\r\n            </Layout>\r\n        </div>\r\n        <Mobiledash/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudyDash\r\n","\r\nimport React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\n\r\nfunction PrivateRoute({component: Component, ...rest}) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => rest.isAuthenticated ? <Component {...props} /> : <Redirect to={{ pathname: '/'}} />}\r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute","\r\nimport React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\n\r\nfunction PublicRoute({component: Component, ...rest}) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => !rest.isAuthenticated ? <Component {...props} /> : <Redirect to={{ pathname: '/dash'}} />}\r\n        />\r\n    )\r\n}\r\n\r\nexport default PublicRoute","import { Button, Form, Input, Typography, notification} from 'antd'\r\nimport React, {useState} from 'react';\r\nimport { useSelector} from 'react-redux';\r\nimport {EyeInvisibleOutlined, EyeTwoTone} from '@ant-design/icons';\r\nimport { onChangePassword } from '../services/userAPI';\r\nimport '../styles/CSS/Account.css'\r\n\r\nconst ChangePassword = () => {\r\n    const userObj = useSelector(state => state.user) //reducer for user data\r\n    const [password, setPassword] = useState({oldPassword: \"\", newPassword: \"\", confrimPassword: \"\"}) //for changepassword\r\n    const { Title } = Typography;\r\n\r\n    const notif = (type, message) => {\r\n      notification[type]({\r\n        message: 'Notification',\r\n        description:\r\n          message,\r\n      });\r\n    };\r\n\r\n       //for change password\r\n       async function onSubmit(){\r\n        try {\r\n           const data = {\r\n             id : userObj.USER._id,\r\n             newPass: password.newPassword,\r\n             oldPass: password.oldPassword\r\n           }\r\n            if(password.newPassword !== password.confrimPassword){\r\n             notif('error', 'Password does not match!')\r\n            }else{\r\n               await onChangePassword(data)\r\n               notif('success', 'Password Updated!')\r\n               setPassword({oldPassword: \"\", newPassword: \"\", confrimPassword: \"\"})\r\n           }\r\n        } catch (error) {\r\n           notif('error', 'Invalid Password!')\r\n        }\r\n     }\r\n\r\n    return (\r\n        <Form style={{borderRadius: \"10px\", background:\"white\", fontFamily: \"Montserrat\", display: 'grid', justifyItems: 'center'}} onFinish={onSubmit}>\r\n        <Title level={3}>Change Password</Title>\r\n            <Form.Item  style={{maxWidth:\"50%\", margin:'0px'}}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please enter your current password!',\r\n                  },\r\n                ]}\r\n            >\r\n              <label>Current Password</label>\r\n              <Input.Password placeholder=\"Current Password\" iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)} \r\n              onChange={e => setPassword({...password, oldPassword: e.target.value})} value={password.oldPassword}/>\r\n            </Form.Item>\r\n            <Form.Item  style={{maxWidth:\"50%\", margin:'0px'}}\r\n              rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your new password!',\r\n              },\r\n            ]}\r\n            >\r\n            <label>New Password</label>\r\n            <Input.Password placeholder=\"New Password\" iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)} \r\n              onChange={e => setPassword({...password, newPassword: e.target.value})} value={password.newPassword}/>\r\n            </Form.Item>\r\n            <Form.Item   style={{maxWidth:\"50%\", marginTop:'0px'}}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please confirm your new password!',\r\n                  },\r\n                ]}\r\n            >\r\n              <label>Confirm Password</label>\r\n              <Input.Password placeholder=\"Confirm New Password\" iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)} \r\n              onChange={e => setPassword({...password, confrimPassword: e.target.value})} value={password.confrimPassword}\r\n            />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button htmlType=\"submit\" style={{background: \"#A0BF85\", borderRadius: \"5px\"}} >SUBMIT</Button>\r\n            </Form.Item>\r\n    </Form>\r\n    )\r\n}\r\n\r\nexport default ChangePassword\r\n","import { Row, Layout, Typography,Avatar, Col, notification } from 'antd'\r\nimport React, {useState} from 'react';\r\nimport { useSelector} from 'react-redux';\r\nimport {UserOutlined} from '@ant-design/icons';\r\nimport Sidebar from '../components/components/Sidebar'\r\nimport ManagerSidebar from '../components/components/ManagerSidebar';\r\nimport Headers from '../components/components/Header'\r\nimport { onUploadAvatar } from '../services/uploadAPI';\r\nimport '../styles/CSS/Account.css'\r\nimport ChangePassword from './ChangePassword';\r\nimport MobileHeader from '../components/components/MobileHeader';\r\nimport ManagerHeaderMobile from '../components/components/ManagerHeaderMobile';\r\n\r\nconst { Header, Content, Sider } = Layout;\r\n\r\nconst Account = () => {\r\n    const userObj = useSelector(state => state.user) //reducer for user data\r\n   // const[file, setFile] = useState(); //for uploading avatar\r\n    const [imgData, setImgData] = useState() //for displaying avatar\r\n    const { Title } = Typography;\r\n    let avatar = localStorage.getItem(\"avatarFilename\")\r\n\r\n    const notif = (type, message) => {\r\n      notification[type]({\r\n        message: 'Notification Title',\r\n        description:\r\n          message,\r\n      });\r\n    };\r\n    \r\n\r\n    return (\r\n    <div>\r\n      <Layout> \r\n        <Sider className=\"sidebar\" >\r\n        {userObj.USER.category === \"user\"?  <Sidebar/> : <ManagerSidebar/>}\r\n        </Sider>\r\n        <Layout>\r\n          <Header className=\"header\" >\r\n            <Headers/>\r\n          </Header>\r\n          <div className=\"mobile-header\">\r\n            {userObj.USER.category ===\"user\"? <MobileHeader/>: <ManagerHeaderMobile/>}\r\n          </div>\r\n          <Content className=\"content\" > \r\n            <div className=\"content-col\" >\r\n              <Row style={{gap: '10px'}} >\r\n                <div style={{borderRadius: \"10px\", background:\"white\", fontFamily: \"Montserrat\"}}>\r\n                  <Row style={{marginTop:'10px', marginLeft: '10px', justifyContent:'center', alignItems:'center', margintTop: '20px', display:'flex', gap:'20px', marginRight:'20px', marginBottom:'20px'}}>\r\n                  <div style={{marginLeft:'10px', marginTop:'15px', display:'grid'}} >\r\n                    <Avatar src={imgData||`/avatar/${avatar}`}  size={128} icon={<UserOutlined />} />\r\n                    <label for=\"file_input_id\" style={{marginLeft: '20px'}}>Upload Photo</label>\r\n                    <input type=\"file\" id=\"file_input_id\" accept=\"image/*\" onChange={async e => {\r\n                      const file = e.target.files[0]\r\n                      //setFile(file)\r\n                      const reader = new FileReader();\r\n                      reader.addEventListener(\"load\", () => {\r\n                        setImgData(reader.result);\r\n                      });\r\n                      reader.readAsDataURL(file)\r\n                      const data = new FormData()\r\n                      data.append(\"user\", userObj.USER._id )\r\n                      data.append(\"file\", file)\r\n                      let result = await onUploadAvatar(data)\r\n                      localStorage.setItem(\"avatarFilename\", result.data.user.avatarFilename)\r\n                      notif('info', result.data.message)\r\n                    }\r\n                  }\r\n                    ></input>\r\n                  </div>\r\n                    <div style={{justifyContent:'center', display:'grid', alignItems:'center'}}>\r\n                    <Title style={{margin: '0px'}} level={3}>{userObj.USER.name}</Title>\r\n                    <p style={{margin: '0px'}}>{userObj.USER.title}</p>\r\n                    <p style={{margin: '0px'}}>{userObj.USER.project}</p>\r\n                    <p style={{margin: '0px'}}>{userObj.USER.email}</p>\r\n                    </div>\r\n                  </Row>\r\n                </div>\r\n                <div><ChangePassword/></div>\r\n              </Row>\r\n            </div>\r\n          </Content>\r\n        \r\n      </Layout>      \r\n      </Layout>\r\n    </div>\r\n    )\r\n    \r\n\r\n}\r\n\r\nexport default Account\r\n","\r\nimport { Input, Button, Form, Row, Select, Checkbox, notification } from 'antd';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { onUserCreate } from '../services/userAPI';\r\nimport { onGetAllProject } from '../services/projectAPI';\r\n\r\n\r\nconst Signup = () => {\r\n    const { Option } = Select;\r\n    const [user, setUser] = useState({name: \"\", email:\"\", project:\"\", title:\"\",password:\"\", category: \"\"})\r\n    const [projectData, setProjectData] = useState([]) //for showing all project\r\n\r\n    const notif = (type, message) => {\r\n        notification[type]({\r\n          message: 'Notification',\r\n          description:\r\n            message,\r\n        });\r\n      };\r\n\r\n    useEffect( () => { //for showing all project\r\n        async function getProjects(){ //for showing all project\r\n            let resultProject = await onGetAllProject()\r\n            let y = resultProject.data\r\n            let tempProjectData = []\r\n            for(let i = 0; i < y.length; i++){ \r\n                tempProjectData.push({\r\n                    key: y[i].projectName,\r\n                    name:  y[i].projectName,\r\n                    value:  y[i].projectName,\r\n                });\r\n            }\r\n            setProjectData(tempProjectData)\r\n        }\r\n\r\n        getProjects()\r\n    }, [])\r\n\r\n    const handleProjectChange = value => {\r\n        setUser({...user, project: value})\r\n      };\r\n\r\n    async function onSubmit(){\r\n        try {\r\n           let res = await onUserCreate(user) \r\n            notif('success', res.data.message)\r\n            setUser({name: \"\", email:\"\", project:\"\", title:\"\",password:\"\"})\r\n        } catch (error) {\r\n            notif('error',error.response.data)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row justify=\"center\" style={{minHeight: '100vh', background: '#f2f2f2'}}>\r\n                <Form >\r\n                <h1 style={{fontFamily: \"Montserrat\", fontWeight: \"bolder\"}}>SIGN UP</h1>\r\n                    <Form.Item name=\"Name\" \r\n                    rules={[\r\n                        {\r\n                        required: true,\r\n                        message: 'Please input your name!',\r\n                        },\r\n                    ]}>\r\n                        <Input placeholder=\"Enter Name\" onChange={e => setUser({...user, name: e.target.value})} value={user.name}></Input>\r\n                    </Form.Item>\r\n                    <Form.Item name=\"Email\"\r\n                            rules={[\r\n                                {\r\n                                    type:'email',\r\n                                required: true,\r\n                                message: 'Please input your email!',\r\n                                },\r\n                            ]}>\r\n                        <Input placeholder=\"Enter Email\" onChange={e => setUser({...user, email: e.target.value})} value={user.email}></Input>\r\n                    </Form.Item>\r\n                    <Form.Item name=\"Project\" \r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your project!',\r\n                                },\r\n                                ]}>\r\n                         <Select defaultValue={projectData[0]} onChange={handleProjectChange} placeholder=\"Project\">\r\n                        {projectData.map(project => (\r\n                        <Option key={project.key} value={project.value}>{project.name}</Option>\r\n                        ))}\r\n                        </Select>\r\n                    </Form.Item>\r\n                    \r\n                    <Form.Item name=\"Title\" \r\n                            rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your title!',\r\n                            },\r\n                            ]}>\r\n                        <Input placeholder=\"Enter Title\" onChange={e => setUser({...user, title: e.target.value})} value={user.title}></Input>\r\n                    </Form.Item>\r\n                    <Form.Item name=\"Category\" \r\n                            rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please select category!',\r\n                            },\r\n                            ]}>\r\n                         <label>Category: </label>       \r\n                        <Checkbox onChange={e => setUser({...user, category: e.target.checked? \"user\": \"\"})} value=\"user\">User</Checkbox>\r\n                        <Checkbox onChange={e => setUser({...user, category: e.target.checked? \"manager\": \"\"})} value=\"manager\">Manager</Checkbox>\r\n                        <Checkbox onChange={e => setUser({...user, category: e.target.checked? \"director\": \"\"})} value=\"director\">Director</Checkbox>\r\n                    </Form.Item>\r\n                    <Row justify=\"center\">\r\n                    <Button onClick={onSubmit} style={{background: \"#A0BF85\", borderRadius: \"5px\"}}>CREATE USER</Button>\r\n                    </Row>\r\n                </Form>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Input, Button, Form, Row, Typography, notification} from 'antd';\r\nimport {MailOutlined } from '@ant-design/icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { onForgotPassword } from '../services/userAPI';\r\n\r\n\r\nfunction useWindowSize(){\r\n  const [size, setSize] = useState([window.innerHeight, window.innerWidth]);\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setSize([window.innerHeight, window.innerWidth])\r\n    }\r\n    window.addEventListener(\"resize\", handleResize)\r\n    return() => {\r\n      window.removeEventListener(\"resize\", handleResize)\r\n    }\r\n  }, [])\r\n  return size;\r\n}\r\n\r\nconst notif = (type, message) => {\r\n  notification[type]({\r\n    message: 'Notification',\r\n    description:\r\n      message,\r\n  });\r\n};\r\n\r\nconst Forgotpassword = () => {\r\n    const  history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { Title } = Typography;\r\n    const [email, setEmail] = useState({email: \"\"});\r\n\r\n    async function handleOk()  {  \r\n        try {\r\n          await onForgotPassword(email) //checking email\r\n          notif('info',\"password reset link already sent to your email\")\r\n          setEmail({email: \"\"})\r\n        } catch (error) {\r\n          notif('error',error.response.data.message)\r\n        }\r\n      };\r\n\r\n      async function login (){\r\n        try {\r\n            history.push('/')\r\n        } catch (error) {\r\n            dispatch({\r\n                type: \"GET_ERRORS\",\r\n                message: error.response.data.message,\r\n                status: error.response.status\r\n              })\r\n        }\r\n      }\r\n      const [height, width] = useWindowSize();\r\n\r\n      if(height <= 760 && width <= 768){\r\n        return(\r\n          <div style={{background: '#f2f2f2', minHeight: \"100vh\"}}>\r\n        <Row justify=\"center\">\r\n        <Form style={{marginTop: \"20%\", width: '400px'}}>\r\n            <Title level={4} style={{fontFamily: \"Bangla MN\", fontWeight: \"bolder\"}}>Need help with your password?</Title>\r\n            <p>Enter the email you use for Virtual Research Management System, and we’ll help you create a new password.</p>\r\n            <Form.Item> <Input  placeholder=\"Enter Email\" prefix={<MailOutlined/>} onChange={e => setEmail({email: e.target.value})} value={email.email}></Input></Form.Item>\r\n            <Form.Item> <Button block style={{background: \"#A0BF85\", borderRadius: \"5px\"}} onClick={handleOk}>SUBMIT</Button></Form.Item>\r\n            <Button type='link' block style={{fontFamily: \"Montserrat\",color: \"#000000\"}} onClick={login}>LOGIN</Button>\r\n        </Form>\r\n        </Row>\r\n        </div>\r\n        )\r\n      }\r\n    return (\r\n        <div style={{background: '#f2f2f2', minHeight: \"100vh\"}}>\r\n        <Row justify=\"center\">\r\n        <Form style={{marginTop: '10%'}}>\r\n            <Title level={2} style={{fontFamily: \"Bangla MN\", fontWeight: \"bolder\"}}>Need help with your password?</Title>\r\n            <p>Enter the email you use for Virtual Research Management System, and we’ll help you create a new password.</p>\r\n            <Form.Item> <Input placeholder=\"Enter Email\" prefix={<MailOutlined/>} onChange={e => setEmail({email: e.target.value})} value={email.email}></Input></Form.Item>\r\n            <Form.Item> <Button block style={{background: \"#A0BF85\", borderRadius: \"5px\"}} onClick={handleOk}>SUBMIT</Button></Form.Item>\r\n            <Button type='link' block style={{fontFamily: \"Montserrat\",color: \"#000000\"}} onClick={login}>LOGIN</Button>\r\n        </Form>\r\n        </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Forgotpassword\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Input, Button, Form, Row,Typography, notification} from 'antd';\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {onVerifyResetPasswordToken, onResetPassword } from '../services/userAPI';\r\nimport * as QueryString from \"query-string\"\r\n\r\nconst NewPassword = () => {\r\n    const  history = useHistory();\r\n    const { Title } = Typography;\r\n    const [newPassword, setNewPassword] = useState({newPassword: \"\", confirmPassword: \"\"});\r\n    const queryParams = QueryString.parse(window.location.search);\r\n    const token = queryParams  &&  queryParams.token ?  queryParams.token : undefined\r\n\r\n    const notif = (type, message) => {\r\n      notification[type]({\r\n        message: 'Notification',\r\n        description:\r\n          message,\r\n      });\r\n    };\r\n\r\n    useEffect(() => {\r\n      async function verifyToken() {\r\n        let result = await onVerifyResetPasswordToken(token)\r\n      }\r\n      if (token === undefined) {\r\n        history.push('/')\r\n      } else {\r\n        verifyToken() \r\n      }\r\n    }, [token, history])\r\n\r\n    async function handleSubmit()  {\r\n      const newPass = newPassword.newPassword\r\n      const confirmPass = newPassword.confirmPassword\r\n    try {\r\n      if(newPass !== confirmPass){\r\n        notif('error',\"Password does not match!\")\r\n      }else{\r\n        await onResetPassword(token,newPassword) \r\n        notif('info',\"Password Updated\")\r\n        history.push('/')\r\n        }\r\n      } catch (error) {\r\n        notif('error',\"Link already expired!\")\r\n        history.push('/')\r\n      }\r\n      };\r\n\r\n    return (\r\n        <div style={{background: '#f2f2f2', minHeight: \"100vh\"}}>\r\n        <Row justify=\"center\">\r\n        <Form style={{marginTop: \"20%\"}}>\r\n            <Title level={2} style={{fontFamily: \"Bangla MN\", fontWeight: \"bolder\"}}>Password Reset</Title>\r\n            <Form.Item> <Input.Password placeholder=\"Enter new password\" iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)} onChange={e => setNewPassword({...newPassword,newPassword: e.target.value})} value={newPassword.newPassword}/></Form.Item>\r\n            <Form.Item> <Input.Password placeholder=\"Confirm new password\" iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)} onChange={e => setNewPassword({...newPassword, confirmPassword: e.target.value})} value={newPassword.confirmPassword}/></Form.Item>\r\n            <Form.Item> <Button block style={{background: \"#A0BF85\", borderRadius: \"5px\"}} onClick={handleSubmit}>SUBMIT</Button></Form.Item>\r\n        </Form>\r\n        </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewPassword\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Button, Table,Progress, Tag, Spin, Popconfirm, notification } from 'antd'\r\nimport '../styles/CSS/Userdash.css'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { onDeleteStudy, onGetAllStudyforProject } from '../services/studyAPI';\r\nimport moment from 'moment';\r\n\r\n\r\nconst ManagerStudyDash = (props) => {\r\n  const dispatch = useDispatch()\r\n  let history= useHistory();\r\n  const projectObj = useSelector(state => state.project)\r\n  const [studyData, setStudyData]= useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const notif = (type, message) => {\r\n    notification[type]({\r\n      message: 'Notification',\r\n      description:\r\n        message,\r\n    });\r\n  };\r\n  \r\n    \r\n  useEffect(() => {\r\n    async function getStudies(){\r\n        let result = await onGetAllStudyforProject(projectObj.PROJECT)\r\n        setLoading(true)\r\n        let x = result.data\r\n        let tempStudyData = []\r\n        for(let i = 0; i < x.length; i++){ \r\n          tempStudyData.push({\r\n              key: x[i],\r\n              title: x[i].studyTitle,\r\n              studyID: x[i].studyID,\r\n              dateCreated: moment(x[i].dateCreated).format('MM-DD-YYYY'),\r\n              dateUpdated: moment(x[i].dateUpdated).format('MM-DD-YYYY'),\r\n              progress: x[i].progress,\r\n              status: [x[i].status]\r\n          });\r\n        }\r\n      setStudyData(tempStudyData)\r\n      setLoading(false)\r\n      }\r\n      getStudies()\r\n}, [projectObj.PROJECT])\r\n\r\nuseEffect(() => {\r\n    if(props.data === null||props.data ===undefined||props.data === ''){\r\n        return\r\n    }else{\r\n    setStudyData([...studyData, {key: studyData.length + 1,\r\n        studyID:props.data.studyID,\r\n        title: props.data.studyTitle,\r\n        dateCreated: moment(props.data.dateCreated).format('MM-DD-YYYY'),\r\n        dateUpdated: moment(props.data.dateUpdated).format('MM-DD-YYYY'),\r\n        status: [props.data.status],\r\n        progress: props.data.progress\r\n    }])\r\n    }\r\n}, [props.data])\r\n\r\nconst handleRemove = (key) => { //deleting datasheet\r\n  let newData = studyData.filter((tempData) => {\r\n    return tempData.key !== key\r\n  })\r\n  setStudyData(newData)\r\n}\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Study ID',\r\n      dataIndex: 'studyID',\r\n      key: 'studyID',\r\n      width: '10%',\r\n      defaultSortOrder: 'descend',\r\n      sorter: (a, b) => a.studyno - b.studyno,\r\n    },\r\n    {\r\n      title: 'Date Created',\r\n      dataIndex: 'dateCreated',\r\n      key: 'dateCreated',\r\n      width: '15%',\r\n      \r\n    },\r\n    {\r\n      title: 'Updated',\r\n      dataIndex: 'dateUpdated',\r\n      key: 'dateUpdated',\r\n      width: '15%',\r\n    },\r\n    {\r\n      title: 'Title',\r\n      dataIndex: 'title',\r\n      key: 'title',\r\n      width: '25%',\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: 'Progress',\r\n      dataIndex: 'progress',\r\n      key: 'progress',\r\n      width: '10%',\r\n      render: progress =>\r\n      <span>\r\n       <Progress percent={progress} size=\"small\" />\r\n    </span>\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      filters: [\r\n        { text: 'Completed', value: 'COMPLETED' },\r\n        { text: 'Ongoing', value: 'ONGOING' },\r\n      ],\r\n      onFilter: (value, record) => record.status.indexOf(value) === 0,\r\n      width: '10%',\r\n      render: status => (\r\n        <span>\r\n          {status.map(status => {\r\n            let color = status === 'Ongoing' ? 'geekblue' : 'green';\r\n            return (\r\n              <Tag color={color} key={status}>\r\n                {status.toUpperCase()}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: 'action',\r\n      key: 'action',\r\n      width: '20%',\r\n      render: (text, record, index) => <div style={{display: 'flex', flexDirection:'row', gap:'5px'}}>\r\n      <Button onClick = {\r\n        (e) => {\r\n          dispatch({\r\n            type: \"SET_STUDY\",\r\n            value: record\r\n         })\r\n         history.push('/datagrid')\r\n        }\r\n      } className=\"manageBtn\">MANAGE</Button>\r\n\r\n      <Popconfirm title=\"Sure to delete?\" onConfirm = {\r\n        async (key) => {\r\n             let id ={_id: record.key._id}\r\n            let result = await onDeleteStudy(id)\r\n             await handleRemove(record.key)\r\n             notif(\"error\", result.data.message)\r\n         }\r\n       }>\r\n   <Button danger>DELETE</Button>\r\n   </Popconfirm>\r\n   </div>\r\n    },\r\n  ];\r\n  \r\n\r\nreturn (\r\n  <div>\r\n        {loading?  <Spin className=\"spinner\" /> :  <Table size=\"small\" scroll={{ x: 1500, y: 500 }} dataSource={studyData} columns={columns} style={{margin: '15px'}}></Table> }\r\n  </div>\r\n    )\r\n}\r\n\r\nexport default ManagerStudyDash\r\n","import { Input, Button, Form, DatePicker, Space, Select, notification, Layout, Modal, Tooltip, InputNumber} from 'antd';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { onStudyCreate } from '../services/studyAPI';\r\nimport { onGetAllUsers } from '../services/userAPI';\r\nimport { useSelector } from 'react-redux';\r\nimport ManagerStudyDash from './ManagerStudyDash';\r\nimport MobileHeader from '../components/components/ManagerHeaderMobile';\r\nimport Sidebar from '../components/components/ManagerSidebar'\r\nimport Headers from '../components/components/Header'\r\nimport '../styles/CSS/Userdash.css'\r\n\r\nconst { Header, Content, Sider } = Layout;\r\n\r\nconst Study = () => {\r\n    const { Option } = Select;\r\n    const projectObj = useSelector(state => state.project) //redux for project\r\n    const userObj = useSelector(state => state.user)\r\n\r\n    const [userData, setUserData] = useState([])\r\n    const [study, setStudy] = useState({title: \"\", projectName: projectObj.PROJECT.projectName, deadline:\"\",assignee:\"\", budget: \"\", user: userObj.USER.name})\r\n    const [forProps, setForProps] = useState()\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    \r\n    const notif = (type, message) => {\r\n        notification[type]({\r\n          message: 'Notification',\r\n          description:\r\n            message,\r\n        });\r\n      };\r\n\r\n      const showModal = () => {\r\n        setIsModalVisible(true);\r\n      };\r\n    \r\n      const handleOk = () => {\r\n        setIsModalVisible(false);\r\n      };\r\n    \r\n      const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n      };\r\n      \r\n    \r\n    useEffect(() => {\r\n        async function getUsers(){\r\n            let resultUsers = await onGetAllUsers()\r\n            let x = resultUsers.data\r\n            let tempUserData = []\r\n            for(let i = 0; i < x.length; i++){ \r\n                tempUserData.push({\r\n                    key: x[i].name,\r\n                    name:  x[i].name,\r\n                    value:  x[i].name,\r\n                })\r\n            }\r\n            setUserData(tempUserData)\r\n        }\r\n        getUsers()\r\n    }, [])\r\n    \r\n\r\n    function handleChange(value) {   //for assigning user\r\n        setStudy({...study, assignee: value})\r\n    }\r\n\r\n\r\n    async function onSubmit(){\r\n        try {\r\n           let result =  await onStudyCreate(study) \r\n           notif(\"success\",result.data.message)\r\n           setStudy({title: \"  \", projectName:\" \", deadline:\" \",assignee:\" \"})\r\n           setForProps(result.data.newStudy)\r\n           //prompt study number and send email to those who are asigned to this project \r\n        } catch (error) {\r\n            notif(\"error\", error.response.data.message)\r\n        }\r\n    }\r\n\r\n    function onChange(date) {\r\n        setStudy({...study, deadline: date})\r\n      }\r\n\r\n    function budgetChange(value){\r\n        setStudy({...study, budget: value})\r\n    }\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <Layout  > \r\n                <Sider  className=\"sidebar\" >\r\n                    <Sidebar/>\r\n                </Sider>\r\n            <Layout >\r\n            <Header className=\"header\" style={{ padding: 0, background:'#f2f2f2' }} >\r\n                <Headers/>\r\n            </Header>\r\n            <div className=\"mobile-header\">\r\n                <MobileHeader/>\r\n            </div>\r\n             <Content style={{  minHeight: \"200vh\", minWidth: '100vh', background: '#f2f2f2' }} >\r\n                <h3 style={{marginTop: '10px', marginLeft: '25px', fontFamily: 'initial'}}>{projectObj.PROJECT.projectName}</h3>          \r\n                <ManagerStudyDash data={forProps}/> \r\n                <Tooltip placement=\"top\" title=\"Add Study\">\r\n                    <Button className=\"add-button\" onClick={showModal}>+</Button>\r\n                </Tooltip>\r\n                    <Modal title=\"Add Study\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                        <Form >\r\n                        <h1 style={{fontFamily: \"Montserrat\", fontWeight: \"bolder\"}}>CREATE STUDY</h1>\r\n                            <Form.Item \r\n                            rules={[\r\n                                {\r\n                                required: true,\r\n                                message: 'Please input your title!',\r\n                                },\r\n                            ]}>\r\n                                <Input placeholder=\"Enter Title\" onChange={e => setStudy({...study, title: e.target.value})} value={study.title}></Input>\r\n                            </Form.Item>\r\n                            <Form.Item  \r\n                                    rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please enter budget!',\r\n                                    },\r\n                                    ]}>\r\n                                <label style={{fontWeight:'bolder'}}>Budget: </label>\r\n                                <InputNumber style={{width:'250px'}} placeholder=\"Enter Budget\" min={1} max={1000000000}\r\n                                formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n                                onChange={budgetChange} ></InputNumber>\r\n                            </Form.Item>\r\n                            <Form.Item  \r\n                                    rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input deadline of study!',\r\n                                    },\r\n                                    ]}>\r\n                                <label style={{fontWeight:'bolder'}}>Deadline: </label>\r\n                                <Space direction=\"vertical\">\r\n                                <DatePicker onChange={onChange}/>\r\n                                </Space>\r\n                            </Form.Item>\r\n                            <Form.Item \r\n                                    rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please assign the study!',\r\n                                    },\r\n                                    ]}>\r\n                                <Select mode=\"tags\" style={{ width: '100%' }} onChange={handleChange} tokenSeparators={[',']} placeholder=\"Assign Study\">\r\n                                {userData.map(user => (\r\n                                    <Option key={user.key} value={user.value}>{user.name}</Option>\r\n                                ))}\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Button onClick={onSubmit} style={{background: \"#A0BF85\", borderRadius: \"5px\"}}>CREATE STUDY</Button>\r\n                        </Form>\r\n                    </Modal>\r\n            </Content> \r\n            </Layout>      \r\n            </Layout>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Study\r\n","import React from 'react'\r\nimport { Result, Button} from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst PageNotFound = () => {\r\n    let history= useHistory();\r\n\r\n    return (\r\n        <div>\r\n            <Result\r\n                status=\"404\"\r\n                title=\"404\"\r\n                subTitle=\"Sorry, the page you visited does not exist.\"\r\n                extra={<Button type=\"primary\" onClick={()=> history.push('/')}>Back to Login</Button>}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageNotFound\r\n","import React, {useEffect, useState} from 'react';\r\nimport { BrowserRouter, Switch, Redirect, Route } from \"react-router-dom\";  \r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport LoginPage from '@pages/Login';\r\nimport Userdash from '@pages/Userdash';\r\nimport StudyDash from '@pages/StudyDash';\r\nimport PrivateRoute from '@routes/privateRoute';\r\nimport PublicRoute from '@routes/publicRoute';\r\nimport {verifyAuth} from '@services/authAPI'\r\nimport Account from '@pages/Account'\r\nimport Signup from '@pages/Signup';\r\nimport ForgotPassword from '@pages/Forgotpassword';\r\nimport ResetPassword from '@pages/NewPassword'\r\nimport { onRenewToken } from './services/authAPI';\r\nimport {Spin} from 'antd'\r\nimport ManagerStudyDash from '@pages/Study';\r\nimport PageNotFound from '@pages/PageNotFound';\r\n\r\n\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const authObj = useSelector(state => state.auth)\r\n  const errorObj = useSelector(state => state.error)\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  \r\n\r\n  const {AUTHENTICATED}  = authObj\r\n //authentication for public and private route\r\n  useEffect(() => {\r\n    async function verify() {\r\n      setLoading(true)\r\n      let result = await verifyAuth()\r\n      if (result.error) {\r\n        dispatch({\r\n          type: \"VERIFIED_AUTHENTICATION\",\r\n          value: false\r\n       })\r\n      } else {\r\n        dispatch({\r\n          type: \"VERIFIED_AUTHENTICATION\",\r\n          value: true\r\n       })\r\n      }\r\n     \r\n    }\r\n    verify()\r\n    setLoading(false)\r\n}, [dispatch])\r\n\r\n\r\n//to renew acesstoken\r\nuseEffect(()=>{\r\n  async function renew(){\r\n    setLoading(true)\r\n  let token = {refreshToken : localStorage.getItem(\"refreshToken\")}\r\n  let result = await onRenewToken(token)\r\n\r\n   if (result.status === 200) {\r\n     localStorage.setItem(\"accessToken\", result.data.accessToken);\r\n     dispatch({\r\n       type: \"SET_USER\",\r\n       value: result.data.user.user\r\n     })\r\n     dispatch({\r\n      type: \"VERIFIED_AUTHENTICATION\",\r\n      value: true\r\n   })\r\n  }else {\r\n     dispatch({\r\n       type: \"AUTH_ERROR\"\r\n     })\r\n }\r\n}\r\nrenew()\r\nsetLoading(false)\r\n}, [errorObj, dispatch])\r\n\r\nuseEffect(() => {\r\n  if(loading === true){\r\n    return <Spin style={{display: 'flex', justifyContent:'center', padding: '25%'}} />\r\n  } \r\n}, [loading])\r\n\r\n\r\n\r\n  return (\r\n    <BrowserRouter>\r\n    <Switch>\r\n      <PublicRoute path=\"/\" exact component={LoginPage} isAuthenticated={AUTHENTICATED}  />\r\n      <PublicRoute path=\"/forgotpassword\" exact component={ForgotPassword} isAuthenticated={AUTHENTICATED}/>\r\n      <PublicRoute path=\"/reset-password/\" exact component={ResetPassword} isAuthenticated={AUTHENTICATED}/>\r\n      <PublicRoute path=\"/secretcreateuser\" exact component={Signup} isAuthenticated={AUTHENTICATED}  />\r\n      <PrivateRoute path=\"/dash\" exact component={Userdash} isAuthenticated={AUTHENTICATED} />\r\n      <PrivateRoute path=\"/studies\" exact component={ManagerStudyDash} isAuthenticated={AUTHENTICATED} />\r\n      <PrivateRoute path=\"/datagrid\" exact component={StudyDash} isAuthenticated={AUTHENTICATED}/>\r\n      <PrivateRoute path=\"/account\" exact component={Account} isAuthenticated={AUTHENTICATED}/>\r\n      <Route path='*'>\r\n       <PageNotFound/>\r\n      </Route>\r\n      <Redirect to={AUTHENTICATED ? `/${window.location.pathname}` : '/'} />\r\n    </Switch>\r\n    </BrowserRouter> \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    AUTHENTICATED: false,\r\n    accessToken: localStorage.getItem(\"accessToken\"),\r\n    refreshToken: localStorage.getItem(\"refreshToken\"),\r\n    LOADING: false,\r\n    USER: null\r\n}\r\n\r\nconst auth = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"VERIFIED_AUTHENTICATION\":\r\n            return {\r\n                ...state,\r\n                AUTHENTICATED: action.value\r\n            }\r\n        case \"AUTH_ERROR\":\r\n        case \"LOGIN_FAIL\":\r\n            localStorage.removeItem(\"accessToken\")\r\n            localStorage.removeItem(\"refreshToken\")\r\n            return {\r\n                ...state,\r\n                AUTHENTICATED: false,\r\n                accessToken: null,\r\n                refreshToken: null,\r\n                USER: null,\r\n                LOADING: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default auth;","const initialState = {\r\n   USER:\"\"\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"SET_USER\":\r\n            return {\r\n                ...state,\r\n                USER: action.value\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer;","const initialState = {\r\n    message: {},\r\n    status: null,\r\n}\r\n\r\nconst errorReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"GET_ERRORS\":\r\n            return {\r\n                message: action.message,\r\n                status: action.status\r\n            }\r\n        case \"CLEAR_ERRORS\":\r\n            return {\r\n                message: {},\r\n                status: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default errorReducer;","const initialState = {\r\n    STUDY:\"\"\r\n }\r\n \r\n const userReducer = (state = initialState, action) => {\r\n     switch(action.type) {\r\n         case \"SET_STUDY\":\r\n             return {\r\n                 ...state,\r\n                 STUDY: action.value\r\n             }\r\n         default:\r\n             return state\r\n     }\r\n }\r\n \r\n export default userReducer;","const initialState = {\r\n    PROJECT:\"\"\r\n }\r\n \r\n const userReducer = (state = initialState, action) => {\r\n     switch(action.type) {\r\n         case \"SET_PROJECT\":\r\n             return {\r\n                 ...state,\r\n                 PROJECT: action.value\r\n             }\r\n         default:\r\n             return state\r\n     }\r\n }\r\n \r\n export default userReducer;","import {combineReducers} from 'redux' \r\n\r\n\r\nimport auth from './authReducer'\r\nimport userReducer from './userReducer'\r\nimport errorReducer from './errorReducer'\r\nimport studyReducer from './studyReducer'\r\nimport projectReducer from './projectReducer'\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth : auth,\r\n   user : userReducer,\r\n    error:errorReducer,\r\n    study: studyReducer,\r\n    project: projectReducer\r\n\r\n})\r\n\r\nexport default  rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {Provider} from 'react-redux'\nimport { createStore} from 'redux';\nimport rootReducer from './reducers/index'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nconst store = createStore(rootReducer, composeWithDevTools())\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}